{"version":3,"sources":["webpack:///./src/components/Welcome/WelcomeContent.js","webpack:///./src/components/Welcome/index.js","webpack:///./src/components/About/TechnologySlider.js","webpack:///./src/components/About/AboutContent.js","webpack:///./src/components/About/index.js","webpack:///./src/components/Utils/BackgroundImage.js","webpack:///./src/components/Utils/BackgroundUtils.js","webpack:///./src/components/Footer/index.js","webpack:///./src/components/Projects/Projects.js","webpack:///./src/components/Projects/ShowMoreButton.js","webpack:///./src/components/Projects/index.js","webpack:///./src/components/StyledBottomSection.js","webpack:///./src/components/index.js","webpack:///./src/pages/index.js"],"names":["StyledWelcomeImage","styled","Img","withConfig","displayName","componentId","media","greaterThan","_templateObject","StyledWelcomeContent","_ref","className","react_default","a","createElement","gatsby_browser_entry","query","render","data","imageData","Width","desktop","childImageSharp","fluid","mobile","strippedText","welcomeNode","field_body","value","_1802420497","GridGapLineHeightBottomMargin","WrapperMarginsMobile","WrapperMaxWidthDesktop","_templateObject2","LargeMargin","DefaultMargin","_templateObject3","_templateObject4","StyledWelcomeBackgroundImage","StyledContainer","div","Welcome_templateObject","StyledWelcomeSection","id","Welcome_WelcomeContent","_3608273974","TechnologySlider","props","_this","_React$Component","call","this","handleBeforeChange","current","next","descriptionSlider","slickGoTo","React","createRef","_this2","sliderSettings","arrows","centerMode","infinite","slidesToShow","centerPadding","autoplay","speed","pauseOnFocus","beforeChange","title","slider","sliderData","relationships","field_slider_content","sliderContents","mapSlides","sliderDescriptions","mapSlideDescriptions","StyledTechnologySliderWrapper","lib_default","Object","assign","ref","pauseOnHover","draggable","swipe","touchMove","_3180518586","Component","SmallMargin","LightTextColor","lessThan","TechnologySlider_templateObject","DefaultMarginAndFontSizeMobile","StyledAboutImage","AboutContent_templateObject","StyledAboutContent","aboutNode","fields","markdownBody","childMarkdownRemark","html","aboutImageData","field_additional_image","localFile","dangerouslySetInnerHTML","__html","About_TechnologySlider","_1539933445","AboutContent_templateObject2","AboutContent_templateObject3","io","StyledAboutSection","About_AboutContent","WrapperMaxWidthMobile","About_templateObject","About_templateObject2","getBackgroundStylesForSingleClass","cssStyleRules","styleContent","document","doc","implementation","createHTMLDocument","styleElement","textContent","body","appendChild","sheet","cssRules","rulesForCssText","styleSheets","window","i","length","classes","rules","x","selectorText","ret","cssText","style","indexOf","getStyle","keys","filter","k","reduce","newData","getBackgroundStyles","includes","split","classObjects","forEach","item","push","apply","convertProps","convertedProps","resolutions","fixed","sizes","imageCache","inImageCache","src","listeners","listenToIntersections","el","cb","IntersectionObserver","entries","entry","l","target","isIntersecting","intersectionRatio","unobserve","rootMargin","observe","noscriptImg","srcSetWebp","srcSet","alt","width","height","opacity","transitionDelay","forwardRef","onLoad","onError","otherProps","objectWithoutPropertiesLoose_default","position","top","left","objectFit","objectPosition","propTypes","PropTypes","object","func","BackgroundImage","isVisible","imgLoaded","IOSupported","fadeIn","seenBefore","critical","hasNoScript","state","bgImage","backgroundStyles","imageRef","handleImageLoaded","bind","assertThisInitialized_default","handleRef","componentDidMount","img","complete","setState","_convertProps","_convertProps$style","_convertProps$imgStyl","imgStyle","_convertProps$placeho","placeholderStyle","backgroundColor","Tag","children","bgColor","imagePlaceholderStyle","transition","imageStyle","image","nextImage","tracedSVG","base64","afterOpacity","overflow","backgroundImage","backgroundSize","key","JSON","stringify","display","type","divStyle","zIndex","defaultProps","fixedObject","shape","number","isRequired","string","srcWebp","fluidObject","aspectRatio","bool","oneOfType","StyledParagraph","p","StyledCopyrightSection","Footer_templateObject","StyledProjects","_ref$projectsToShow","projectsToShow","projects","mapProjects","dummyImage","_3627114134","Projects_templateObject","ShowMoreButton","onClick","projectCount","other","hideButtonClass","totalCount","index_es","icon","size","marginLeft","fontSize","verticalAlign","_3607262508","DarkLinkHoverVisited","ProjectsSection","handleClick","event","showMoreStyle","color","LightHeadingColor","nextProject","querySelector","scrollIntoView","behavior","StyledProjectsSection","StyledProjectContainer","StyledLoader","components_Projects_Projects","Projects_ShowMoreButton","components_Projects_templateObject","Projects_templateObject2","section","StyledBottomSection","Utils_BackgroundImage","BlueBackground","components_Projects","Footer","_3930285051","StyledBottomSection_templateObject","MainPage","Layout","Welcome","About","components_StyledBottomSection","library","add","fab","faAngleDown","IndexPage","Fragment","components","GlobalStyle"],"mappings":"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","file":"component---src-pages-index-js-5e03bc1609000073762e.js","sourcesContent":["import React from 'react'\nimport { StaticQuery, graphql } from 'gatsby'\nimport Img from 'gatsby-image'\nimport styled from 'styled-components'\nimport {\n  media,\n  GridGapLineHeightBottomMargin,\n  WrapperMarginsMobile,\n  DefaultMargin,\n  LargeMargin,\n  Width, WrapperMaxWidthDesktop\n} from \"../Utils/Constants\"\n// import { stripGutenbergTags } from \"../Utils/HelperFunctions\"\n\n/**\n * The Welcome Content displays the children of the Welcome Screen.\n *\n * @param className String    From styled components\n */\nconst WelcomeContent = ({ className }) => (\n    <StaticQuery query={graphql`\n      query {\n        welcomeNode: nodeBasicContent(\n          title: { eq: \"Welcome Title\" }\n        ) {\n          id\n          title\n          field_body {\n            value\n            format\n          }\n        }\n        desktop: file(relativePath: { eq: \"welcome-ge-desktop.png\" }) {\n          childImageSharp {\n            fluid(quality: 90, maxWidth: 4160) {\n              ...GatsbyImageSharpFluid_withWebp\n            }\n          }\n        }\n        mobile: file(relativePath: { eq: \"welcome-ge-mobile.png\" }) {\n          childImageSharp {\n            fluid(quality: 90, maxWidth: 640) {\n              ...GatsbyImageSharpFluid_withWebp\n            }\n          }\n        }\n      }\n    `}\n     render={ data => {\n       // Switch Image according to size on desktop / mobile.\n       const imageData = Width > 640 ?\n           data.desktop.childImageSharp.fluid :\n           data.mobile.childImageSharp.fluid\n       const strippedText = data.welcomeNode.field_body.value\n       return (\n             <div className={className}>\n               <h1>{strippedText}</h1>\n               <StyledWelcomeImage fluid={imageData}/>\n             </div>\n         )\n       }\n     }\n    />\n)\n\nconst StyledWelcomeImage = styled(Img)`\n  width: 50%;\n  height: auto;\n  ${media.greaterThan(\"large\")`\n    width: 30%;\n  `}\n`\n\nconst StyledWelcomeContent = styled(WelcomeContent)`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n  margin: ${ GridGapLineHeightBottomMargin }px ${ WrapperMarginsMobile }px 0;\n  \n  h1 {\n    max-width: ${ WrapperMaxWidthDesktop }px;\n  }\n  \n  ${media.greaterThan(\"medium\")`\n    // margin: calc(${ LargeMargin }px + 75px) ${ WrapperMarginsMobile }px 0;\n    margin-top: calc(${ DefaultMargin } + 104px);\n  `}\n  \n  ${media.greaterThan(\"small\")`\n    margin: calc(${ LargeMargin }px + 75px) ${ WrapperMarginsMobile }px 0;\n  `}\n  \n  ${media.greaterThan(\"321px\")`\n    margin: ${ LargeMargin }px ${ WrapperMarginsMobile }px 0;\n  `}\n`\n\nexport default StyledWelcomeContent","import React from 'react'\nimport { StaticQuery, graphql } from 'gatsby'\nimport Img from 'gatsby-image'\nimport styled from 'styled-components'\nimport {\n  DefaultMargin,\n  // HeaderHeight,\n  // HeaderHeightMobile,\n  LargeMargin,\n  Width\n} from \"../Utils/Constants\";\nimport StyledWelcomeContent from './WelcomeContent'\nimport { media } from '../Utils/Constants'\n\n/**\n * The Welcome Section displays the Hero Image and all content therein.\n * @param className String    From styled components\n */\nconst WelcomeSection = ({ className }) => (\n    <StaticQuery query={graphql`\n      query {\n        desktop: file(relativePath: { eq: \"welcome-bg-desktop.jpg\" }) {\n          childImageSharp {\n            fluid(quality: 100, maxWidth: 4160) {\n              ...GatsbyImageSharpFluid_withWebp\n            }\n          }\n        }\n        mobile: file(relativePath: { eq: \"welcome-bg-mobile.jpg\" }) {\n          childImageSharp {\n            fluid(quality: 90, maxWidth: 640) {\n              ...GatsbyImageSharpFluid_withWebp\n            }\n          }\n        }\n      }\n    `}\n    render={ data => {\n      // Switch Image according to size on desktop / mobile.\n      const imageData = Width > 640 ?\n          data.desktop.childImageSharp.fluid :\n          data.mobile.childImageSharp.fluid\n      return (\n        <section className={className} id='welcome-section'>\n          <StyledWelcomeBackgroundImage fluid={imageData} />\n          <StyledContainer>\n            <StyledWelcomeContent />\n          </StyledContainer>\n        </section>\n      )\n      }\n    }\n    />\n)\n\nconst StyledWelcomeBackgroundImage = styled(Img)`\n  position: absolute;\n  left: 0;\n  top: 0;\n  width: auto;\n  height: 100vh;\n`\n\nconst StyledContainer = styled.div`\n  position: absolute;\n  left: 0;\n  top: 0;\n  padding-top: ${ LargeMargin }px;\n  width: 100%;\n  height: 100vh;\n  \n  ${media.greaterThan(\"small\")`\n    padding-top: ${ DefaultMargin }px;    \n  `}\n`\n\nconst StyledWelcomeSection = styled(WelcomeSection)`\n  width: 100%;\n  height: 100vh;\n  position: relative;\n  overflow: hidden;\n`\n\nexport default StyledWelcomeSection","import React from 'react'\nimport { graphql, StaticQuery } from 'gatsby'\nimport styled from 'styled-components'\nimport Slider from 'react-slick'\nimport 'slick-carousel/slick/slick.css'\nimport 'slick-carousel/slick/slick-theme.css'\nimport {\n  media,\n  DefaultMarginAndFontSizeMobile,\n  LightTextColor,\n  SmallMargin\n} from '../Utils/Constants'\nimport { mapSlideDescriptions, mapSlides } from '../Utils/HelperFunctions'\n\n/**\n * Returns the Technology Slider Component.\n * @param className\n * @return {*}\n * @constructor\n */\nclass TechnologySlider extends React.Component {\n  constructor(props) {\n    super(props)\n    this.descriptionSlider = React.createRef()\n  }\n\n  handleBeforeChange = (current, next) =>\n    this.descriptionSlider.current.slickGoTo(next)\n\n  render() {\n    return (\n      <StaticQuery query={graphql`\n      {\n        slider: nodeTechnologiesSlider {\n          title\n          relationships {\n            field_slider_content {\n              field_title\n              field_description {\n                value\n              }\n              fields {\n                markdownDescription {\n                  childMarkdownRemark {\n                    html\n                  }\n                }\n              }\n              field_fontawesome_icon\n            }\n          }\n        }\n      }\n      `}\n      render={data => {\n       const sliderSettings = {\n         className: \"tech-icon-slider\",\n         arrows: false,\n         centerMode: true,\n         infinite: true,\n         slidesToShow: 3,\n         centerPadding: `-1px`,\n         autoplay: true,\n         speed: 500,\n         pauseOnFocus: true,\n         beforeChange: (current, next) => this.handleBeforeChange(current, next),\n       }\n       const descriptionSettings = {\n         className: \"center\",\n         centerMode: true,\n         infinite: true,\n         slidesToShow: 1,\n         centerPadding: `0`,\n         pauseOnHover: false,\n         autoplay: false,\n         draggable: false,\n         swipe: false,\n         touchMove: false,\n       }\n       const title = data.slider.title\n       const sliderData = data.slider.relationships.field_slider_content\n       // console.log(sliderData)\n       const sliderContents = mapSlides(sliderData)\n       const sliderDescriptions = mapSlideDescriptions(sliderData)\n       return (\n           <StyledTechnologySliderWrapper>\n             <h3 className=\"light-heading\">{title}</h3>\n             <Slider {...sliderSettings}>\n               {sliderContents}\n             </Slider>\n             <Slider ref={this.descriptionSlider} {...descriptionSettings}>\n               {sliderDescriptions}\n             </Slider>\n           </StyledTechnologySliderWrapper>\n         )\n       }\n      }\n      />\n    )\n  }\n}\n\nconst StyledTechnologySliderWrapper = styled.div`\n  width: 320px;\n  \n  h3 {\n    margin-bottom: ${ SmallMargin }px;\n  }\n  \n  .tech-icon-slider {\n    .slide-wrapper {\n      svg, span {\n        color: ${LightTextColor};\n        font-size: 2rem;\n        height: 4rem;\n        transition: all 200ms linear;\n        filter: blur(1px);\n      }\n    }\n    .slick-current {\n      svg, span {\n        font-size: 4rem;\n        filter: none;\n      }\n    }\n  }\n  \n  .slide-wrapper, .slide-description-wrapper { \n    max-width: 320px;\n  }\n  \n  .slider-info p {\n    color: ${ LightTextColor };\n  }\n \n  \n  ${media.lessThan(\"medium\")`\n    display: block;\n    margin-bottom: ${ DefaultMarginAndFontSizeMobile }px;\n  `}\n`\n\nexport default TechnologySlider","import React from 'react'\nimport { StaticQuery, graphql } from 'gatsby'\nimport Img from 'gatsby-image'\nimport styled from 'styled-components'\nimport {\n  media,\n  WrapperMarginsMobile,\n  DefaultMarginAndFontSizeMobile,\n  GridGapLineHeightBottomMargin\n} from '../Utils/Constants'\nimport TechnologySlider from \"./TechnologySlider\";\n// import { stripGutenbergTags } from \"../Utils/HelperFunctions\"\n\n/**\n * The About Content displays the children of the About Screen.\n *\n * @param className String    From styled components\n */\nconst AboutContent = ({ className }) => (\n    <StaticQuery query={graphql`\n      query {\n        aboutNode: nodeBasicContent(title: {eq: \"About Me\"}) {\n          title\n          field_body {\n            value\n            format\n            processed\n          }\n          fields {\n            markdownBody {\n              childMarkdownRemark {\n                html\n              }\n            }\n          }\n          relationships {\n            field_additional_image {\n              localFile {\n                childImageSharp {\n                  fluid(quality: 90, maxWidth: 960) {\n                    ...GatsbyImageSharpFluid_withWebp\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    `}\n     render={ data => {\n       const title = data.aboutNode.title\n       const strippedText = data.aboutNode.fields\n           .markdownBody.childMarkdownRemark.html\n       const aboutImageData = data.aboutNode.relationships\n           .field_additional_image.localFile.childImageSharp.fluid\n       return (\n             <div className={className}>\n               <article>\n                 <h2 className=\"light-heading\">{title}</h2>\n                 <div className=\"light-text\" dangerouslySetInnerHTML={{\n                   __html: strippedText,\n                 }} />\n                 <TechnologySlider />\n               </article>\n               <StyledAboutImage fluid={aboutImageData}/>\n             </div>\n         )\n       }\n     }\n    />\n)\n\nconst StyledAboutImage = styled(Img)`\n  width: 100%;\n  height: auto;\n  \n  img {\n    object-fit: contain !important;\n  }\n  \n  ${media.lessThan(\"medium\")`\n     margin-top: ${ DefaultMarginAndFontSizeMobile }px;\n  `}\n`\n\nconst StyledAboutContent = styled(AboutContent)`\n  display: grid;\n  grid-template-columns: 3fr 2fr;\n  grid-gap: ${ GridGapLineHeightBottomMargin }px; \n  \n  ${media.lessThan(\"large\")`\n     margin: 0 ${ WrapperMarginsMobile }px;\n  `}\n  \n  ${media.lessThan(\"medium\")`\n    display: block;\n  `}\n`\n\nexport default StyledAboutContent","import React from 'react'\nimport styled from 'styled-components'\nimport {\n  DefaultMargin,\n  DefaultMarginAndFontSizeMobile,\n  WrapperMarginsMobile,\n  WrapperMaxWidthDesktop,\n  WrapperMaxWidthMobile\n} from \"../Utils/Constants\"\nimport StyledAboutContent from './AboutContent'\nimport { media } from '../Utils/Constants'\n\n/**\n * The About Section displays the correctly positioned about content therein.\n * @param className String    From styled components\n */\nconst AboutSection = ({ className }) => (\n    <section className={className} id=\"about_me\">\n      <StyledAboutContent />\n    </section>\n)\n\nconst StyledAboutSection = styled(AboutSection)`\n  position: relative;\n  max-width: ${ WrapperMaxWidthMobile }px;\n  margin: ${ DefaultMarginAndFontSizeMobile }px ${ WrapperMarginsMobile }px;\n  \n  ${media.greaterThan(\"small\")`\n    margin: ${ DefaultMarginAndFontSizeMobile }px auto;\n  `}\n  \n  ${media.greaterThan(\"medium\")`\n    max-width: ${ WrapperMaxWidthDesktop }px;\n    margin: ${ DefaultMargin }px auto;\n  `}\n`\n\nexport default StyledAboutSection","import React from 'react'\nimport PropTypes from 'prop-types'\nimport getBackgroundStyles from './BackgroundUtils'\n\n// Handle legacy names for image queries.\nconst convertProps = props => {\n  let convertedProps = { ...props }\n  if (convertedProps.resolutions) {\n    convertedProps.fixed = convertedProps.resolutions\n    delete convertedProps.resolutions\n  }\n  if (convertedProps.sizes) {\n    convertedProps.fluid = convertedProps.sizes\n    delete convertedProps.sizes\n  }\n\n  return convertedProps\n}\n\n// Cache if we've seen an image before so we don't both with\n// lazy-loading & fading in on subsequent mounts.\nconst imageCache = {}\nconst inImageCache = props => {\n  const convertedProps = convertProps(props)\n  // Find src\n  const src = convertedProps.fluid\n      ? convertedProps.fluid.src\n      : convertedProps.fixed.src\n\n  if (imageCache[src]) {\n    return true\n  } else {\n    imageCache[src] = true\n    return false\n  }\n}\n\nlet io\nconst listeners = []\n\nfunction getIO() {\n  if (\n      typeof io === `undefined` &&\n      typeof window !== `undefined` &&\n      window.IntersectionObserver\n  ) {\n    io = new window.IntersectionObserver(\n        entries => {\n          entries.forEach(entry => {\n            listeners.forEach(l => {\n              if (l[0] === entry.target) {\n                // Edge doesn't currently support isIntersecting, so also test for an intersectionRatio > 0\n                if (entry.isIntersecting || entry.intersectionRatio > 0) {\n                  io.unobserve(l[0])\n                  l[1]()\n                }\n              }\n            })\n          })\n        },\n        { rootMargin: `200px` }\n    )\n  }\n\n  return io\n}\n\nconst listenToIntersections = (el, cb) => {\n  getIO().observe(el)\n  listeners.push([el, cb])\n}\n\nconst noscriptImg = props => {\n  // Check if prop exists before adding each attribute to the string output below to prevent\n  // HTML validation issues caused by empty values like width=\"\" and height=\"\"\n  const src = props.src ? `src=\"${props.src}\" ` : `src=\"\" ` // required attribute\n  const sizes = props.sizes ? `sizes=\"${props.sizes}\" ` : ``\n  const srcSetWebp = props.srcSetWebp ? `<source type='image/webp' srcSet=\"${props.srcSetWebp}\" ${sizes}/>` : ``\n  const srcSet = props.srcSet ? `<source srcSet=\"${props.srcSet}\" ${sizes}/>` : ``\n  const title = props.title ? `title=\"${props.title}\" ` : ``\n  const alt = props.alt ? `alt=\"${props.alt}\" ` : `alt=\"\" ` // required attribute\n  const width = props.width ? `width=\"${props.width}\" ` : ``\n  const height = props.height ? `height=\"${props.height}\" ` : ``\n  const opacity = props.opacity ? props.opacity : `1`\n  const transitionDelay = props.transitionDelay ? props.transitionDelay : `0.5s`\n  return (`<picture>${srcSetWebp}${srcSet}<img ${width}${height}${src}${alt}${title}style=\"position:absolute;top:0;left:0;transition:opacity 0.5s;transition-delay:${transitionDelay};opacity:${opacity};width:100%;height:100%;object-fit:cover;object-position:center\"/></picture>`)\n}\n\nconst Img = React.forwardRef((props, ref) => {\n  const { style, onLoad, onError, alt, ...otherProps } = props\n\n  return <img\n      {...otherProps}\n      onLoad={onLoad}\n      onError={onError}\n      alt={alt}\n      ref={ref}\n      style={{\n        position: `absolute`,\n        top: 0,\n        left: 0,\n        width: `100%`,\n        height: `100%`,\n        objectFit: `cover`,\n        objectPosition: `center`,\n        ...style,\n      }}\n  />\n})\n\nImg.propTypes = {\n  style: PropTypes.object,\n  onError: PropTypes.func,\n  onLoad: PropTypes.func,\n}\n\nclass BackgroundImage extends React.Component {\n  constructor(props) {\n    super(props)\n\n    // If this browser doesn't support the IntersectionObserver API\n    // we default to start downloading the image right away.\n    let isVisible = true\n    let imgLoaded = true\n    let IOSupported = false\n    let fadeIn = props.fadeIn\n\n    // If this image has already been loaded before then we can assume it's\n    // already in the browser cache so it's cheap to just show directly.\n    const seenBefore = inImageCache(props)\n\n    if (\n        !seenBefore &&\n        typeof window !== `undefined` &&\n        window.IntersectionObserver\n    ) {\n      isVisible = false\n      imgLoaded = false\n      IOSupported = true\n    }\n\n    // Always don't render image while server rendering\n    if (typeof window === `undefined`) {\n      isVisible = false\n      imgLoaded = false\n    }\n\n    if (props.critical) {\n      isVisible = true\n      imgLoaded = false\n      IOSupported = false\n    }\n\n    const hasNoScript =  !(this.props.critical && !this.props.fadeIn)\n\n    this.state = {\n      isVisible,\n      imgLoaded,\n      IOSupported,\n      fadeIn,\n      hasNoScript,\n      seenBefore,\n    }\n\n    this.bgImage = ``\n\n    // Get background(-*) styles from CSS (e.g. Styled Components).\n    this.backgroundStyles = getBackgroundStyles(this.props.className)\n\n    this.imageRef = React.createRef()\n    this.handleImageLoaded = this.handleImageLoaded.bind(this)\n    this.handleRef = this.handleRef.bind(this)\n  }\n\n  componentDidMount() {\n    if (this.props.critical) {\n      const img = this.imageRef.current\n      if (img && img.complete) {\n        this.handleImageLoaded()\n      }\n    }\n\n  }\n\n  handleRef(ref) {\n    if (this.state.IOSupported && ref) {\n      listenToIntersections(ref, () => {\n        this.setState({ isVisible: true })\n      })\n    }\n  }\n\n  handleImageLoaded() {\n    this.setState({ imgLoaded: true })\n    if (this.state.seenBefore) {\n      this.setState({ fadeIn: false })\n    }\n    this.props.onLoad && this.props.onLoad()\n  }\n\n  render() {\n    const {\n      title,\n      alt,\n      className,\n      style = {},\n      imgStyle = {},\n      placeholderStyle = {},\n      fluid,\n      fixed,\n      backgroundColor,\n      Tag,\n      id,\n      children\n    } = convertProps(this.props)\n\n    const bgColor = typeof backgroundColor === `boolean` ? `lightgray` : backgroundColor\n\n    const imagePlaceholderStyle = {\n      opacity: this.state.imgLoaded ? 0 : 1,\n      transition: `opacity 0.5s`,\n      transitionDelay: this.state.imgLoaded ? `0.5s` : `0.25s`,\n      ...imgStyle,\n      ...placeholderStyle,\n    }\n\n    const imageStyle = {\n      opacity: this.state.imgLoaded || this.state.fadeIn === false ? 1 : 0,\n      transition: this.state.fadeIn === true ? `opacity 0.5s` : `none`,\n      ...imgStyle,\n    }\n\n    if (fluid) {\n      const image = fluid\n\n      // Set the backgroundImage according to images available.\n      let bgImage = this.bgImage,\n          nextImage = ``\n      if (image.tracedSVG) nextImage = `'${ image.tracedSVG }'`\n      if (image.base64 && !image.tracedSVG) nextImage = image.base64\n      if (this.state.isVisible) nextImage = image.src\n\n      // Switch bgImage & nextImage and opacity accordingly.\n      bgImage = bgImage === `` ? nextImage : ``\n      const afterOpacity = nextImage !== bgImage ? 1 : 0\n\n      // console.log('bgImage: ' + bgImage, '\\nnextImage: ' + nextImage,\n      //     '\\nafterOpacity: ' + afterOpacity, bgColor)\n\n      this.bgImage = bgImage\n\n      return (\n          <Tag\n              id={id}\n              className={`${className ? className : ``} after-background-image-${id} gatsby-image-wrapper`}\n              style={{\n                position: `relative`,\n                overflow: `hidden`,\n                backgroundColor: bgColor,\n                backgroundImage: `url(${ bgImage })`,\n                // backgroundRepeat: `no-repeat`,\n                backgroundSize: `cover`,\n                transition: `background 0.2s ease-in-out`,\n                // transitionDelay: transitionDelay,\n                // zIndex: -1,\n                ...style,\n                ...this.backgroundStyles,\n              }}\n              ref={this.handleRef}\n              key={`fluid-${JSON.stringify(image.srcSet)}`}\n          >\n            <style dangerouslySetInnerHTML={{\n              __html:\n                  `.after-background-image-${id}:after {\n                  background: url(${nextImage}) repeat;\n                  content: \"\";\n                  opacity: ${afterOpacity};\n                  width: 100%;\n                  height: 100%;\n                  position: absolute;\n                  top: 0;\n                  left: 0;\n                  z-index: -1;\n                  transition: opacity 0.25s ease-in-out;\n                  -webkit-transition: opacity 0.25s ease-in-out;\n                  -moz-transition: opacity 0.25s ease-in-out;\n                  -o-transition: opacity 0.25s ease-in-out;\n              }`\n            }}>\n            </style>\n            {/* Show the blurry base64 image. */}\n            {image.base64 && (\n                <Img\n                    alt={!this.state.isVisible ? alt : ``}\n                    title={title}\n                    src={image.base64}\n                    style={{...imagePlaceholderStyle,\n                      // Prevent Gatsby Image from being shown, as we only need it for the Backgrounds.\n                      display: `none`,\n                    }}\n                />\n            )}\n\n            {/* Show the traced SVG image. */}\n            {image.tracedSVG && (\n                <Img\n                    alt={!this.state.isVisible ? alt : ``}\n                    title={title}\n                    src={image.tracedSVG}\n                    style={{...imagePlaceholderStyle,\n                      // Prevent Gatsby Image from being shown, as we only need it for the Backgrounds.\n                      display: `none`,\n                    }}\n                />\n            )}\n\n             {/*Show a solid background color. */}\n            {/*{bgColor && (*/}\n                {/*<Tag*/}\n                    {/*title={title}*/}\n                    {/*style={{*/}\n                      {/*backgroundColor: bgColor,*/}\n                      {/*position: `absolute`,*/}\n                      {/*top: 0,*/}\n                      {/*bottom: 0,*/}\n                      {/*opacity: !this.state.imgLoaded ? 1 : 0,*/}\n                      {/*transitionDelay: `0.35s`,*/}\n                      {/*right: 0,*/}\n                      {/*left: 0,*/}\n                    {/*}}*/}\n                {/*/>*/}\n            {/*)}*/}\n\n            {/* Once the image is visible (or the browser doesn't support IntersectionObserver), start downloading the image */}\n            {this.state.isVisible && (\n                <picture style={{\n                  // Prevent Gatsby Image from being shown, as we only need it for the Backgrounds.\n                  display: `none`,\n                }}>\n                  {image.srcSetWebp && (<source\n                      type={`image/webp`}\n                      srcSet={image.srcSetWebp}\n                      sizes={image.sizes}\n                  />)}\n\n                  <source\n                      srcSet={image.srcSet}\n                      sizes={image.sizes}\n                  />\n\n                  <Img\n                      alt={alt}\n                      title={title}\n                      src={image.src}\n                      style={imageStyle}\n                      ref={this.imageRef}\n                      onLoad={this.handleImageLoaded}\n                      onError={this.props.onError}\n                  />\n                </picture>\n            )}\n\n            {/* Show the original image during server-side rendering if JavaScript is disabled */}\n            {this.state.hasNoScript && (\n                <noscript\n                    dangerouslySetInnerHTML={{\n                      __html: noscriptImg({ alt, title, ...image }),\n                    }}\n                />\n            )}\n            {children}\n          </Tag>\n      )\n    }\n\n    if (fixed) {\n      const image = fixed\n      const divStyle = {\n        position: `relative`,\n        overflow: `hidden`,\n        display: `inline-block`,\n        width: image.width,\n        height: image.height,\n        ...style,\n      }\n\n      if (style.display === `inherit`) {\n        delete divStyle.display\n      }\n\n      // Set the backgroundImage according to images available.\n      let bgImage = ``,\n          nextImage = ``\n      if (image.tracedSVG) nextImage = `'${ image.tracedSVG }'`\n      if (image.base64 && !image.tracedSVG) nextImage = image.base64\n      if (this.state.isVisible) nextImage = image.src\n      // Switch bgImage & nextImage and opacity accordingly.\n      bgImage = bgImage === `` ? nextImage : ``\n      const afterOpacity = nextImage !== bgImage ? 1 : 0\n\n      // console.log(this.backgroundStyles)\n\n      return (\n          <Tag\n              id={id}\n              className={`${className ? className : ``} gatsby-image-wrapper`}\n              style={{\n                position: `relative`,\n                overflow: `hidden`,\n                backgroundImage: `url(${ bgImage })`,\n                // backgroundRepeat: `no-repeat`,\n                backgroundSize: `cover`,\n                transition: `background 0.2s ease-in-out`,\n                zIndex: -1,\n                ...divStyle,\n                ...this.backgroundStyles,\n              }}\n              ref={this.handleRef}\n              key={`fixed-${JSON.stringify(image.srcSet)}`}\n          >\n            <style dangerouslySetInnerHTML={{\n              __html:\n                  `.my-special-div:after {\n                background: url(${nextImage}) repeat;\n                content: \"\";\n                opacity: ${afterOpacity};\n                width: 100%;\n                height: 100%;\n                position: absolute;\n                top: 0;\n                left: 0;\n                z-index: -2;\n                /* TRANSISITION */\n                transition: opacity 1s ease-in-out;\n                -webkit-transition: opacity 1s ease-in-out;\n                -moz-transition: opacity 1s ease-in-out;\n                -o-transition: opacity 1s ease-in-out;\n            }`\n            }}>\n            </style>\n            {/* Show the blurry base64 image. */}\n            {image.base64 && (\n                <Img\n                    alt={!this.state.isVisible ? alt : ``}\n                    title={title}\n                    src={image.base64}\n                    style={{...imagePlaceholderStyle,\n                      // Prevent Gatsby Image from being shown, as we only need it for the Backgrounds.\n                      display: `none`,\n                    }}\n                />\n            )}\n\n            {/* Show the traced SVG image. */}\n            {image.tracedSVG && (\n                <Img\n                    alt={!this.state.isVisible ? alt : ``}\n                    title={title}\n                    src={image.tracedSVG}\n                    style={{...imagePlaceholderStyle,\n                      // Prevent Gatsby Image from being shown, as we only need it for the Backgrounds.\n                      display: `none`,\n                    }}\n                />\n            )}\n\n            {/* Show a solid background color. */}\n            {bgColor && (\n                <Tag\n                    title={title}\n                    style={{\n                      backgroundColor: bgColor,\n                      width: image.width,\n                      opacity: !this.state.imgLoaded ? 1 : 0,\n                      transitionDelay: `0.25s`,\n                      height: image.height,\n                    }}\n                />\n            )}\n\n            {/* Once the image is visible, start downloading the image */}\n            {this.state.isVisible && (\n                <picture style={{\n                  // Prevent Gatsby Image from being shown, as we only need it for the Backgrounds.\n                  display: `none`,\n                }}>\n                  {image.srcSetWebp && (<source\n                      type={`image/webp`}\n                      srcSet={image.srcSetWebp}\n                      sizes={image.sizes}\n                  />)}\n\n                  <source\n                      srcSet={image.srcSet}\n                      sizes={image.sizes}\n                  />\n\n                  <Img\n                      alt={alt}\n                      title={title}\n                      width={image.width}\n                      height={image.height}\n                      src={image.src}\n                      style={imageStyle}\n                      ref={this.imageRef}\n                      onLoad={this.handleImageLoaded}\n                      onError={this.props.onError}\n                  />\n                </picture>\n            )}\n\n            {/* Show the original image during server-side rendering if JavaScript is disabled */}\n            {this.state.hasNoScript && (\n                <noscript\n                    dangerouslySetInnerHTML={{\n                      __html: noscriptImg({\n                        alt,\n                        title,\n                        width: image.width,\n                        height: image.height,\n                        ...image,\n                      }),\n                    }}\n                />\n            )}\n          </Tag>\n      )\n    }\n\n    return null\n  }\n}\n\nBackgroundImage.defaultProps = {\n  critical: false,\n  fadeIn: true,\n  alt: ``,\n  Tag: `div`,\n}\n\nconst fixedObject = PropTypes.shape({\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired,\n  src: PropTypes.string.isRequired,\n  srcSet: PropTypes.string.isRequired,\n  base64: PropTypes.string,\n  tracedSVG: PropTypes.string,\n  srcWebp: PropTypes.string,\n  srcSetWebp: PropTypes.string,\n})\n\nconst fluidObject = PropTypes.shape({\n  aspectRatio: PropTypes.number.isRequired,\n  src: PropTypes.string.isRequired,\n  srcSet: PropTypes.string.isRequired,\n  sizes: PropTypes.string.isRequired,\n  base64: PropTypes.string,\n  tracedSVG: PropTypes.string,\n  srcWebp: PropTypes.string,\n  srcSetWebp: PropTypes.string,\n})\n\nBackgroundImage.propTypes = {\n  resolutions: fixedObject,\n  sizes: fluidObject,\n  fixed: fixedObject,\n  fluid: fluidObject,\n  fadeIn: PropTypes.bool,\n  title: PropTypes.string,\n  alt: PropTypes.string,\n  className: PropTypes.oneOfType([PropTypes.string, PropTypes.object]), // Support Glamor's css prop.\n  critical: PropTypes.bool,\n  style: PropTypes.object,\n  imgStyle: PropTypes.object,\n  placeholderStyle: PropTypes.object,\n  backgroundColor: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n  onLoad: PropTypes.func,\n  onError: PropTypes.func,\n  Tag: PropTypes.string,\n  id: PropTypes.string,\n}\n\nexport default BackgroundImage\n","/**\n * Gets styles by a class name.\n *\n * @notice The className has to exactly match the CSS class\n * @param className string\n */\nconst getStyle = className => {\n  const styleSheets = typeof window !== `undefined` ?\n      window.document.styleSheets : []\n  for (let i = 0; i < styleSheets.length; i++) {\n    const classes = styleSheets[i].rules || styleSheets[i].cssRules\n    if (!classes)\n      continue;\n    for (let x = 0; x < classes.length; x++) {\n      if (classes[x].selectorText === className) {\n        let ret;\n        if(classes[x].cssText){\n          ret = classes[x].cssText\n        } else {\n          ret = classes[x].style.cssText\n        }\n        if(ret.indexOf(classes[x].selectorText) === -1){\n          ret = `${classes[x].selectorText}{${ret}}`\n        }\n        return ret\n      }\n    }\n  }\n}\n\n/**\n * Gets rules from a css Text.\n *\n * @param styleContent\n * @return {*}\n */\nconst rulesForCssText = function (styleContent) {\n  if (typeof document !== `undefined`) {\n    const doc = document.implementation.createHTMLDocument(\"\"),\n          styleElement = document.createElement(\"style\")\n\n    styleElement.textContent = styleContent\n    // the style will only be parsed once it is added to a document\n    doc.body.appendChild(styleElement)\n\n    return styleElement.sheet.cssRules\n  }\n  return {}\n}\n\n/**\n * Filters out Background Rules for a given class Name.\n * @param className\n * @return {{}}\n */\nconst getBackgroundStylesForSingleClass = className => {\n  const style = getStyle(`.${className}`)\n  const cssStyleRules = rulesForCssText(style)\n  // console.log(className, style, cssStyleRules)\n  if (cssStyleRules.length > 0 &&\n      typeof(cssStyleRules[0].style) !== 'undefined') {\n    // Filter out background(-*) rules that contain a definition.\n    return Object.keys(cssStyleRules[0].style)\n        .filter(k =>\n            k.indexOf('background') === 0 && cssStyleRules[0].style[k] !== '')\n        .reduce((newData, k) => {\n          newData[k] = cssStyleRules[0].style[k]\n          return newData\n        }, {})\n  }\n  return {}\n}\n\n/**\n * Uses the above to get all background(-*) rules from given classes.\n * TODO: get classes for media queries...\n *\n * @param className\n * @return {*}\n */\nconst getBackgroundStyles = className => {\n  if (typeof(window) !== 'undefined' && className.includes(' ')) {\n    const classes = className.split(' ')\n    let classObjects = []\n    classes.forEach(item =>\n        classObjects.push(getBackgroundStylesForSingleClass(item))\n    )\n    return Object.assign(...classObjects)\n  }\n  return getBackgroundStylesForSingleClass(className)\n}\n\nexport default getBackgroundStyles\n\n\n\n","import React from 'react'\nimport styled from \"styled-components\"\nimport { media } from '../Utils/Constants'\nimport {\n  LargeMargin,\n  DefaultMarginAndFontSizeMobile,\n  GridGapLineHeightBottomMargin,\n} from \"../Utils/Constants\"\n\n/**\n * This Styled Component wraps the Footer.\n *\n * @param className String    From styled components\n */\nconst CopyrightSection = ({ className }) => (\n    <div className={className}>\n      <StyledParagraph>&copy; Tim Hagn</StyledParagraph>\n    </div>\n)\n\nconst StyledParagraph = styled.p`\n  position: absolute;\n  top: 0;\n  width: 100%;\n  text-align: center;\n`\n\nconst StyledCopyrightSection = styled(CopyrightSection)`\n  position: relative;\n  overflow: hidden;\n  height: calc(${ LargeMargin }px + ${ GridGapLineHeightBottomMargin }px);\n  \n  ${media.lessThan(\"medium\")`\n    height: calc(${ DefaultMarginAndFontSizeMobile }px + 23px);\n  `}\n`\n\nexport default StyledCopyrightSection","import React from 'react'\nimport { StaticQuery, graphql } from 'gatsby'\n// import Img from 'gatsby-image'\nimport styled from 'styled-components'\nimport {\n  media,\n  WrapperMarginsMobile,\n  // DefaultMarginAndFontSizeMobile,\n  GridGapLineHeightBottomMargin,\n  // LargeMargin\n} from '../Utils/Constants'\n// import { stripGutenbergTags } from '../Utils/HelperFunctions'\n// import StyledProject from './Project'\nimport {mapProjects} from \"../Utils/HelperFunctions\";\n\n/**\n * Displays the Projects.\n *\n * @param className String    From styled components\n * @param projectsToShow\n */\nconst Projects = ({ className, projectsToShow = 3 }) => (\n    <StaticQuery query={graphql`\n      query {\n        projects: allNodeProject(filter: {status: {eq: true},}\n  \t\t\t\t\t\t\t sort: {fields: [sticky, changed]\n                \t\t\t\torder: DESC}) {\n          edges {\n            node {\n              id\n              title\n              promote\n              sticky\n              body {\n                value\n                format\n                processed\n                summary\n              }\n              field_project_link {\n                uri\n                title\n              }\n              field_project_source_link {\n                uri\n                title\n              }\n              fields {\n                markdownBody {\n                  childMarkdownRemark {\n                    html\n                  }\n                }\n              }\n              relationships {\n                field_project_image {\n                  localFile {\n                    childImageSharp {\n                      fluid(quality: 90, maxWidth: 960) {\n                        ...GatsbyImageSharpFluid_withWebp\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        },\n        dummyImage: file(relativePath: { eq: \"DUMMY.jpg\" }) {\n          childImageSharp {\n            fluid(quality: 100, maxWidth: 960) {\n              ...GatsbyImageSharpFluid_withWebp\n            }\n          }\n        }\n      }\n    `}\n     render={ data => {\n       const projects = mapProjects(data.projects, data.dummyImage, projectsToShow)\n       return (\n           <div className={className}>\n             {projects}\n           </div>\n       )\n       }\n     }\n    />\n)\n\nconst StyledProjects = styled(Projects)`\n  grid-template-columns: repeat(3, 1fr);\n  display: block;\n  \n  ${media.greaterThan(\"medium\")`\n    display: grid;\n    margin: 0 ${ WrapperMarginsMobile }px;\n    grid-gap: ${ GridGapLineHeightBottomMargin }px;\n  `}\n`\n\nexport default StyledProjects","import React from 'react'\nimport styled from 'styled-components'\nimport {\n  DarkLinkHoverVisited,\n} from '../Utils/Constants'\nimport { graphql, StaticQuery } from 'gatsby'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\n/**\n * \"Loads\" more projects.\n */\nconst ShowMore = ({ className, onClick, projectCount, children, ...other }) => (\n    <StaticQuery query={graphql`\n      query {\n        projects: allNodeProject {\n            totalCount\n        }\n      }\n    `}\n     render={ data => {\n         // Hide ShowMoreButton on no more data.\n         const hideButtonClass =\n             projectCount >= data.projects.totalCount ? ` hide-show-more` : ``\n         return (\n             <button id=\"show-more\"\n                     className={`${className}${hideButtonClass}`}\n                     onClick={onClick}\n                     {...other}>\n               show more\n               <FontAwesomeIcon icon=\"angle-down\"\n                                size=\"lg\"\n                                style={{\n                                  marginLeft: 13,\n                                  fontSize: `2rem`,\n                                  verticalAlign: `-0.725rem`,\n                                }} />\n             </button>\n         )\n       }\n     }\n    />\n)\n\n\nconst ShowMoreButton = styled(ShowMore)`\n  width: 100%;\n  height: 52px;\n  background-color: transparent;\n  color: ${ DarkLinkHoverVisited };\n  border: 1px solid ${ DarkLinkHoverVisited };\n  border-radius: 20px;\n  font-size: 14px;\n  font-weight: 700;\n  transition: all 400ms;\n  \n  &:hover {\n    background-color: rgba(0, 249, 199, 0.2);\n    color: ${ DarkLinkHoverVisited };\n  }\n  \n  &:focus {\n    border: 2px solid ${ DarkLinkHoverVisited };\n    border-radius: 20px;\n  }\n`\n\nexport default ShowMoreButton","import React from 'react'\nimport styled from \"styled-components\"\n\nimport {\n  DarkLinkHoverVisited,\n  LightHeadingColor,\n  media,\n  // Width\n} from '../Utils/Constants'\nimport {\n  LargeMargin,\n  DefaultMargin,\n  DefaultMarginAndFontSizeMobile,\n  WrapperMaxWidthDesktop,\n  WrapperMaxWidthMobile,\n  WrapperMarginsMobile\n} from \"../Utils/Constants\"\nimport StyledProjects from \"./Projects\";\nimport ShowMoreButton from \"./ShowMoreButton\";\n\n/**\n * This Styled Component wraps the Project Section.\n *\n * @param className String    From styled components\n */\nclass ProjectsSection extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      projectsToShow: 3,\n      showMoreStyle: {}\n    }\n  }\n\n  handleClick = event => {\n    // console.log(this.state.projectsToShow)\n    this.setState({\n      projectsToShow: this.state.projectsToShow + 3,\n      showMoreStyle: {\n        backgroundColor: DarkLinkHoverVisited,\n        color: LightHeadingColor,\n      }\n    }, () => {\n      if (typeof window !== 'undefined') {\n        const nextProject = document.querySelector(`#styled-project-${this.state.projectsToShow - 3}`)\n        if (nextProject) {\n          nextProject.scrollIntoView({\n            behavior: 'smooth',\n          })\n        }\n        this.setState({\n          showMoreStyle: {}\n        })\n      }\n    })\n  }\n\n  render() {\n    return (\n        <StyledProjectsSection id=\"projects\">\n          <StyledProjectContainer>\n            <h2>Projects</h2>\n            <StyledLoader>\n              <StyledProjects projectsToShow={this.state.projectsToShow} />\n              <ShowMoreButton onClick={this.handleClick}\n                              style={this.state.showMoreStyle}\n                              projectCount={this.state.projectsToShow}/>\n            </StyledLoader>\n          </StyledProjectContainer>\n        </StyledProjectsSection>\n    )\n  }\n}\n\nconst StyledLoader = styled.div`\n  width: 100%;\n`\n\nconst StyledProjectContainer = styled.div`\n  max-width: ${ WrapperMaxWidthMobile }px;\n  margin: ${ DefaultMarginAndFontSizeMobile }px ${ WrapperMarginsMobile }px;\n  \n  ${media.greaterThan(\"small\")`\n    margin: ${ DefaultMarginAndFontSizeMobile }px auto;\n  `}\n  \n  ${media.greaterThan(\"medium\")`\n    max-width: ${ WrapperMaxWidthDesktop }px;\n    margin: ${ DefaultMargin }px auto; \n    \n    h2 {\n      margin-bottom: ${ LargeMargin }px;\n    }\n  `}\n`\n\nconst StyledProjectsSection = styled.section`\n  position: relative;\n  overflow: hidden;\n  width: 100%;\n`\n\nexport default ProjectsSection","import React from 'react'\nimport { graphql, StaticQuery } from 'gatsby'\nimport styled from 'styled-components'\n\nimport BackgroundImage from './Utils/BackgroundImage'\nimport StyledCopyrightSection from './Footer'\nimport StyledProjectsSection from './Projects'\nimport {\n  Width,\n  media,\n  // DarkBackground,\n  BlueBackground\n} from './Utils/Constants'\n\nconst BottomSection = ({ className }) => (\n    <StaticQuery query={graphql`\n      query {\n        desktop: file(relativePath: { eq: \"seamless-bg-desktop.jpg\" }) {\n          childImageSharp {\n            fluid(quality: 100, maxWidth: 4160) {\n              ...GatsbyImageSharpFluid_withWebp\n            }\n          }\n        }\n        mobile: file(relativePath: { eq: \"seamless-bg-mobile.jpg\" }) {\n          childImageSharp {\n            fluid(quality: 90, maxWidth: 640) {\n              ...GatsbyImageSharpFluid_withWebp\n            }\n          }\n        }\n      }\n    `}\n     render={data => {\n       // Switch Image according to size on desktop / mobile.\n       const imageData = Width > 640 ?\n           data.desktop.childImageSharp.fluid :\n           data.mobile.childImageSharp.fluid\n       return (\n          <BackgroundImage Tag=\"section\"\n                           className={className}\n                           fluid={imageData}\n                           backgroundColor={BlueBackground}\n          >\n            <StyledProjectsSection />\n            <StyledCopyrightSection />\n          </BackgroundImage>\n       )\n     }\n     }\n    />\n)\n\nconst StyledBottomSection = styled(BottomSection)`\n  width: 100%;\n  background-repeat: repeat-y;\n  \n  ${media.lessThan(\"medium\")`\n    background-size: contain !important;\n  `}\n`\n\nexport default StyledBottomSection","import React from 'react'\n\nimport Layout from './Layout'\nimport StyledWelcomeSection from './Welcome'\nimport StyledAboutSection from './About'\nimport StyledBottomSection from './StyledBottomSection'\n\nconst MainPage = () => (\n    <Layout>\n      <StyledWelcomeSection />\n      <StyledAboutSection />\n      <StyledBottomSection />\n    </Layout>\n)\n\nexport default MainPage","import React from 'react'\nimport 'typeface-rubik'\n\nimport GlobalStyle from '../components/GlobalStyle'\nimport MainPage from '../components'\n// import NotFoundContainer from '../components/NotFoundContainer'\n\n/**\n * Integrate FontAwesome Icons\n */\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { fab } from '@fortawesome/free-brands-svg-icons'\nimport { faAngleDown } from '@fortawesome/pro-solid-svg-icons'\n\nlibrary.add(fab, faAngleDown)\n\n/**\n * Main Page.\n * @return {*}\n * @constructor\n */\nconst IndexPage = () => (\n    <React.Fragment>\n      <MainPage />\n      {/*<NotFoundContainer/>*/}\n      <GlobalStyle />\n    </React.Fragment>\n)\n\nexport default IndexPage\n"],"sourceRoot":""}