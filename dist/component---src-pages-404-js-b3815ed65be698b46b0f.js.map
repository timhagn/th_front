{"version":3,"sources":["webpack:///./src/components/404/NotFoundContent.js","webpack:///./src/components/404/index.js","webpack:///./src/components/NotFoundContainer.js","webpack:///./src/pages/404.js"],"names":["StyledNotFoundImage","styled","Img","withConfig","displayName","componentId","media","lessThan","_templateObject","DefaultMarginAndFontSizeMobile","StyledNotFoundButton","Button","SmallMargin","StyledNotFoundTextArea","div","StyledNotFoundContainer","WrapperMaxWidthMobile","WrapperMarginsMobile","greaterThan","_templateObject2","GridGapLineHeightBottomMargin","_templateObject3","WrapperMaxWidthDesktop","LargeMargin","StyledNotFoundContent","_ref","className","react_default","a","createElement","gatsby_browser_entry","query","render","data","imageData","notFoundImage","childImageSharp","fluid","strippedText","lostNode","field_body","value","title","to","_4071377112","_templateObject4","StyledNotFoundBackgroundImage","StyledContainer","HeaderHeight","DefaultMargin","_404_templateObject","HeaderHeightMobile","_404_templateObject2","StyledNotFound","Width","desktop","mobile","id","_404_NotFoundContent","_3608273974","NotFoundContainer","Layout","notFound","_404","NotFoundPage","Fragment","components_NotFoundContainer","GlobalStyle"],"mappings":"kuBAsBA,IA6CMA,EAAsBC,YAAOC,KAAVC,WAAA,CAAAC,YAAA,uCAAAC,YAAA,gBAAGJ,CAAH,wDAMrBK,IAAMC,SAAS,SAAfD,CANqBE,IAOTC,MAKVC,EAAuBT,YAAOU,KAAVR,WAAA,CAAAC,YAAA,wCAAAC,YAAA,gBAAGJ,CAAH,uDAGPW,KAGbC,EAAyBZ,IAAOa,IAAVX,WAAA,CAAAC,YAAA,0CAAAC,YAAA,gBAAGJ,CAAH,2CAKtBc,EAA0Bd,IAAOa,IAAVX,WAAA,CAAAC,YAAA,2CAAAC,YAAA,gBAAGJ,CAAH,6DAEbe,IACHP,IAAsCQ,IAE/CX,IAAMY,YAAY,QAAlBZ,CALyBa,IAQZC,IACFX,KAGXH,IAAMY,YAAY,SAAlBZ,CAZyBe,IAaXC,IACHC,MAcAC,EAVevB,YAtFN,SAAAwB,GAAA,IAAGC,EAAHD,EAAGC,UAAH,OACpBC,EAAAC,EAAAC,cAACC,EAAA,YAAD,CAAaC,MAAK,aAqBjBC,OAAS,SAAAC,GAEP,IAAMC,EAAYD,EAAKE,cAAcC,gBAAgBC,MAC/CC,EAAeL,EAAKM,SAASC,WAAWC,MAC9C,OACId,EAAAC,EAAAC,cAAA,OAAKH,UAAWA,GACdC,EAAAC,EAAAC,cAAA,UAAKI,EAAKM,SAASG,OACnBf,EAAAC,EAAAC,cAACd,EAAD,KACEY,EAAAC,EAAAC,cAAC7B,EAAD,CAAqBqC,MAAOH,IAC5BP,EAAAC,EAAAC,cAAChB,EAAD,KACEc,EAAAC,EAAAC,cAAA,SAAIS,GACJX,EAAAC,EAAAC,cAACnB,EAAD,CAAsBiC,GAAG,KAAzB,qBAhCbV,KAAAW,MAqFuBzC,WAAA,CAAAC,YAAA,yCAAAC,YAAA,gBAAGJ,CAAH,sBAGvBK,IAAMC,SAAS,QAAfD,CAHuBuC,IAKHpC,sNC/FxB,IAqCMqC,EAAgC7C,YAAOC,KAAVC,WAAA,CAAAC,YAAA,wCAAAC,YAAA,YAAGJ,CAAH,6DAQ7B8C,EAAkB9C,IAAOa,IAAVX,WAAA,CAAAC,YAAA,0BAAAC,YAAA,YAAGJ,CAAH,mGAIE+C,IAAsBC,IAIzC3C,IAAMC,SAAS,SAAfD,CARiB4C,IASIC,IAA4B5B,KAGjDjB,IAAMC,SAAS,QAAfD,CAZiB8C,IAaID,IAA4B1C,MAWtC4C,EAPQpD,YA9DN,SAAAwB,GAAA,IAAGC,EAAHD,EAAGC,UAAH,OACbC,EAAAC,EAAAC,cAACC,EAAA,YAAD,CAAaC,MAAK,aAkBjBC,OAAS,SAAAC,GAEP,IAAMC,EAAYoB,IAAQ,IACtBrB,EAAKsB,QAAQnB,gBAAgBC,MAC7BJ,EAAKuB,OAAOpB,gBAAgBC,MAChC,OACIV,EAAAC,EAAAC,cAAA,WAASH,UAAWA,EAAW+B,GAAG,mBAChC9B,EAAAC,EAAAC,cAACiB,EAAD,CAA+BT,MAAOH,IACtCP,EAAAC,EAAAC,cAACkB,EAAD,KACEpB,EAAAC,EAAAC,cAAC6B,EAAD,SA3BXzB,KAAA0B,MA6DgBxD,WAAA,CAAAC,YAAA,yBAAAC,YAAA,YAAGJ,CAAH,gECrEL2D,EANW,kBACtBjC,EAAAC,EAAAC,cAACgC,EAAA,EAAD,CAAQC,UAAU,GAChBnC,EAAAC,EAAAC,cAACkC,EAAD,QCMSC,UAPM,kBACjBrC,EAAAC,EAAAC,cAACF,EAAAC,EAAMqC,SAAP,KACEtC,EAAAC,EAAAC,cAACqC,EAAD,MACAvC,EAAAC,EAAAC,cAACsC,EAAA,EAAD","file":"component---src-pages-404-js-b3815ed65be698b46b0f.js","sourcesContent":["import React from 'react'\nimport { StaticQuery, graphql } from 'gatsby'\nimport Img from 'gatsby-image'\nimport styled from 'styled-components'\nimport {\n  media,\n  DefaultMarginAndFontSizeMobile,\n  GridGapLineHeightBottomMargin,\n  WrapperMarginsMobile,\n  WrapperMaxWidthDesktop,\n  WrapperMaxWidthMobile,\n  LargeMargin,\n  SmallMargin,\n} from \"../Utils/Constants\"\n// import { stripGutenbergTags } from \"../Utils/HelperFunctions\"\nimport Button from \"../Utils/Button\"\n\n/**\n * The Welcome Content displays the children of the Welcome Screen.\n *\n * @param className String    From styled components\n */\nconst NotFoundContent = ({ className }) => (\n    <StaticQuery query={graphql`\n      query {\n        lostNode: nodeBasicContent(\n          id: { eq: \"646d60e1-7b5f-54db-a6f1-8858075fce92\" }\n        ) {\n          id\n          title\n          field_body {\n            value\n            format\n          }\n        }\n        notFoundImage: file(relativePath: { eq: \"404-image.png\" }) {\n          childImageSharp {\n            fluid(quality: 90, maxWidth: 890) {\n              ...GatsbyImageSharpFluid_withWebp\n            }\n          }\n        }\n      }\n    `}\n     render={ data => {\n       // Switch Image according to size on desktop / mobile.\n       const imageData = data.notFoundImage.childImageSharp.fluid\n       const strippedText = data.lostNode.field_body.value\n       return (\n           <div className={className}>\n             <h1>{data.lostNode.title}</h1>\n             <StyledNotFoundContainer>\n               <StyledNotFoundImage fluid={imageData}/>\n               <StyledNotFoundTextArea>\n                 <p>{strippedText}</p>\n                 <StyledNotFoundButton to=\"/\">\n                   Take Me Home!\n                 </StyledNotFoundButton>\n               </StyledNotFoundTextArea>\n             </StyledNotFoundContainer>\n           </div>\n       )\n     }\n     }\n    />\n)\n\nconst StyledNotFoundImage = styled(Img)`\n  width: 100%;\n  height: auto;\n  grid-row: 1;\n  grid-column: 2;\n  \n  ${media.lessThan(\"medium\")`\n     margin: ${ DefaultMarginAndFontSizeMobile }px auto;\n     width: 60%;\n  `}\n`\n\nconst StyledNotFoundButton = styled(Button)`\n  font-size: 14px;\n  font-weight: 700;\n  margin-right: ${ SmallMargin }px;\n`\n\nconst StyledNotFoundTextArea = styled.div`\n  display: block;\n  justify-content: normal;\n`\n\nconst StyledNotFoundContainer = styled.div`\n  display: block;\n  max-width: ${ WrapperMaxWidthMobile }px;\n  margin: ${ DefaultMarginAndFontSizeMobile }px ${ WrapperMarginsMobile }px;\n  \n  ${media.greaterThan(\"small\")`\n    display: grid;\n    grid-template-columns: 3fr 2fr;\n    grid-gap: ${ GridGapLineHeightBottomMargin }px; \n    margin: ${ DefaultMarginAndFontSizeMobile }px auto;\n  `}\n  \n  ${media.greaterThan(\"medium\")`\n    max-width: ${ WrapperMaxWidthDesktop }px;\n    margin: ${ LargeMargin }px auto;\n  `}\n`\n\nconst StyledNotFoundContent = styled(NotFoundContent)`\n  display: block;\n  \n  ${media.lessThan(\"small\")`\n     h1 {\n      margin-bottom: ${ DefaultMarginAndFontSizeMobile }px;\n    }\n  `}\n`\n\nexport default StyledNotFoundContent","import React from 'react'\nimport { StaticQuery, graphql } from 'gatsby'\nimport Img from 'gatsby-image'\nimport styled from 'styled-components'\nimport {\n  DefaultMargin, DefaultMarginAndFontSizeMobile,\n  HeaderHeight,\n  HeaderHeightMobile,\n  LargeMargin,\n  Width\n} from \"../Utils/Constants\";\nimport { media } from '../Utils/Constants'\nimport StyledNotFoundContent from \"./NotFoundContent\";\n\n/**\n * The NotFound component gets displayed in case of a 404.\n * @param className String    From styled components\n */\nconst NotFound = ({ className }) => (\n    <StaticQuery query={graphql`\n      query {\n        desktop: file(relativePath: { eq: \"welcome-bg-desktop.jpg\" }) {\n          childImageSharp {\n            fluid(quality: 100, maxWidth: 4160) {\n              ...GatsbyImageSharpFluid_withWebp\n            }\n          }\n        }\n        mobile: file(relativePath: { eq: \"welcome-bg-mobile.jpg\" }) {\n          childImageSharp {\n            fluid(quality: 90, maxWidth: 640) {\n              ...GatsbyImageSharpFluid_withWebp\n            }\n          }\n        }\n      }\n    `}\n     render={ data => {\n       // Switch Image according to size on desktop / mobile.\n       const imageData = Width > 640 ?\n           data.desktop.childImageSharp.fluid :\n           data.mobile.childImageSharp.fluid\n       return (\n           <section className={className} id='welcome-section'>\n             <StyledNotFoundBackgroundImage fluid={imageData} />\n             <StyledContainer>\n               <StyledNotFoundContent />\n             </StyledContainer>\n           </section>\n       )\n     }\n     }\n    />\n)\n\nconst StyledNotFoundBackgroundImage = styled(Img)`\n  position: absolute;\n  left: 0;\n  top: 0;\n  width: auto;\n  height: 100vh;\n`\n\nconst StyledContainer = styled.div`\n  position: absolute;\n  left: 0;\n  top: 0;\n  padding-top: calc(${ HeaderHeight }px + ${ DefaultMargin }px);\n  width: 100%;\n  height: 100vh;\n\n  ${media.lessThan(\"medium\")`\n    padding-top: calc(${ HeaderHeightMobile }px + ${ LargeMargin }px);\n  `}\n  \n  ${media.lessThan(\"small\")`\n    padding-top: calc(${ HeaderHeightMobile }px + ${ DefaultMarginAndFontSizeMobile }px);\n  `}\n`\n\nconst StyledNotFound = styled(NotFound)`\n  width: 100%;\n  height: 100vh;\n  position: relative;\n  overflow: hidden;\n`\n\nexport default StyledNotFound","import React from 'react'\n\nimport Layout from './Layout'\nimport StyledNotFound from \"./404\";\n\nconst NotFoundContainer = () => (\n    <Layout notFound={true}>\n      <StyledNotFound />\n    </Layout>\n)\n\nexport default NotFoundContainer","import React from 'react'\nimport 'typeface-rubik'\n\nimport GlobalStyle from '../components/GlobalStyle'\nimport NotFoundContainer from '../components/NotFoundContainer'\n\nconst NotFoundPage = () => (\n    <React.Fragment>\n      <NotFoundContainer />\n      <GlobalStyle />\n    </React.Fragment>\n)\n\nexport default NotFoundPage\n"],"sourceRoot":""}