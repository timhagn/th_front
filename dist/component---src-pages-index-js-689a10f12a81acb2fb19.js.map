{"version":3,"sources":["webpack:///./src/components/Welcome/WelcomeContent.js","webpack:///./src/components/Welcome/index.js","webpack:///./src/components/About/AboutHelpers.js","webpack:///./src/components/About/TechnologySlider.js","webpack:///./src/components/About/AboutContent.js","webpack:///./src/components/About/index.js","webpack:///./src/components/Utils/BackgroundImage.js","webpack:///./src/components/Utils/BackgroundUtils.js","webpack:///./src/components/Footer/index.js","webpack:///./src/components/Projects/ProjectButton.js","webpack:///./src/components/Projects/Project.js","webpack:///./src/components/Projects/Projects.js","webpack:///./src/components/Projects/ProjectHelpers.js","webpack:///./src/components/Projects/ShowMoreButton.js","webpack:///./src/components/Projects/index.js","webpack:///./src/components/StyledBottomSection.js","webpack:///./src/components/index.js","webpack:///./src/pages/index.js"],"names":["StyledWelcomeImage","styled","Img","withConfig","displayName","componentId","media","greaterThan","_templateObject","StyledWelcomeContent","_ref","className","react_default","a","createElement","gatsby_browser_entry","query","render","data","imageData","Width","desktop","childImageSharp","fluid","mobile","strippedText","welcomeNode","field_body","value","_1802420497","GridGapLineHeightBottomMargin","WrapperMarginsMobile","WrapperMaxWidthDesktop","_templateObject2","LargeMargin","DefaultMargin","_templateObject3","_templateObject4","StyledWelcomeBackgroundImage","StyledContainer","div","Welcome_templateObject","StyledWelcomeSection","id","Welcome_WelcomeContent","_3608273974","Slide","slide","index","field_fontawesome_icon","trim","indexOf","replace","index_es","icon","SlideDescription","_ref2","dangerouslySetInnerHTML","__html","fields","markdownDescription","childMarkdownRemark","html","mapSlides","sliderData","builtSlides","sliderContents","sliderDescriptions","forEach","push","AboutHelpers_Slide","key","AboutHelpers_SlideDescription","TechnologySlider","props","_this","_React$Component","call","this","handleBeforeChange","current","next","descriptionSlider","slickGoTo","React","createRef","_this2","sliderSettings","arrows","centerMode","infinite","slidesToShow","centerPadding","autoplay","speed","pauseOnFocus","beforeChange","title","slider","relationships","field_slider_content","_mapSlides","StyledTechnologySliderWrapper","lib_default","Object","assign","ref","pauseOnHover","draggable","swipe","touchMove","_3180518586","Component","SmallMargin","LightTextColor","lessThan","TechnologySlider_templateObject","DefaultMarginAndFontSizeMobile","StyledAboutImage","AboutContent_templateObject","StyledAboutContent","aboutNode","markdownBody","aboutImageData","field_additional_image","localFile","About_TechnologySlider","_1539933445","AboutContent_templateObject2","AboutContent_templateObject3","io","StyledAboutSection","About_AboutContent","WrapperMaxWidthMobile","About_templateObject","About_templateObject2","getBackgroundStylesForSingleClass","cssStyleRules","styleContent","document","doc","implementation","createHTMLDocument","styleElement","textContent","body","appendChild","sheet","cssRules","rulesForCssText","styleSheets","window","i","length","classes","rules","x","selectorText","ret","cssText","style","getStyle","keys","filter","k","reduce","newData","getBackgroundStyles","includes","split","classObjects","item","apply","convertProps","convertedProps","resolutions","fixed","sizes","imageCache","inImageCache","src","listeners","listenToIntersections","el","cb","IntersectionObserver","entries","entry","l","target","isIntersecting","intersectionRatio","unobserve","rootMargin","observe","noscriptImg","srcSetWebp","srcSet","alt","width","height","opacity","transitionDelay","forwardRef","onLoad","onError","otherProps","objectWithoutPropertiesLoose_default","position","top","left","objectFit","objectPosition","propTypes","PropTypes","object","func","BackgroundImage","isVisible","IOSupported","fadeIn","seenBefore","critical","hasNoScript","state","imgLoaded","bgImage","backgroundStyles","imageRef","handleImageLoaded","bind","assertThisInitialized_default","handleRef","componentDidMount","onStartLoad","wasCached","img","complete","setState","_convertProps","_convertProps$style","_convertProps$imgStyl","imgStyle","_convertProps$placeho","placeholderStyle","placeholderClassName","backgroundColor","Tag","children","bgColor","imagePlaceholderStyle","transition","imageStyle","placeholderImageProps","image","nextImage","tracedSVG","base64","afterOpacity","overflow","backgroundImage","backgroundSize","JSON","stringify","display","type","divStyle","zIndex","defaultProps","fixedObject","shape","number","isRequired","string","srcWebp","fluidObject","aspectRatio","bool","oneOfType","StyledParagraph","p","StyledCopyrightSection","Footer_templateObject","ProjectButtons","projectData","projectTitle","projectLink","projectLinkTitle","projectCodeLink","projectCodeLinkTitle","projectLinkButton","StyledProjectButton","to","aria-label","projectCodeLinkButton","Button","StyledProjectButtons","Project","projectImageData","projectText","StyledImageContainer","StyledProjectImage","ProjectButton","StyledProject","Project_templateObject","StyledProjects","_ref$projectsToShow","projectsToShow","projects","dummyImage","edges","slice","map","node","field_project_image","field_project_link","uri","field_project_source_link","Projects_Project","mapProjects","_3627114134","Projects_templateObject","ShowMoreButton","onClick","projectCount","other","hideButtonClass","totalCount","size","marginLeft","fontSize","verticalAlign","_3607262508","DarkLinkHoverVisited","ProjectsSection","handleClick","event","showMoreStyle","color","LightHeadingColor","nextProject","querySelector","scrollIntoView","behavior","StyledProjectsSection","StyledProjectContainer","StyledLoader","components_Projects_Projects","Projects_ShowMoreButton","components_Projects_templateObject","Projects_templateObject2","section","StyledBottomSection","Utils_BackgroundImage","BlueBackground","components_Projects","Footer","_3930285051","StyledBottomSection_templateObject","MainPage","Layout","Welcome","About","components_StyledBottomSection","library","add","fab","faAngleDown","IndexPage","Fragment","components","GlobalStyle"],"mappings":"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","file":"component---src-pages-index-js-689a10f12a81acb2fb19.js","sourcesContent":["import React from 'react'\nimport { StaticQuery, graphql } from 'gatsby'\nimport Img from 'gatsby-image'\nimport styled from 'styled-components'\nimport {\n  media,\n  GridGapLineHeightBottomMargin,\n  WrapperMarginsMobile,\n  DefaultMargin,\n  LargeMargin,\n  Width, WrapperMaxWidthDesktop\n} from \"../Utils/Constants\"\n// import { stripGutenbergTags } from \"../Utils/HelperFunctions\"\n\n/**\n * The Welcome Content displays the children of the Welcome Screen.\n *\n * @param className String    From styled components\n */\nconst WelcomeContent = ({ className }) => (\n    <StaticQuery query={graphql`\n      query {\n        welcomeNode: nodeBasicContent(\n          title: { eq: \"Welcome Title\" }\n        ) {\n          id\n          title\n          field_body {\n            value\n            format\n          }\n        }\n        desktop: file(relativePath: { eq: \"welcome-ge-desktop.png\" }) {\n          childImageSharp {\n            fluid(quality: 90, maxWidth: 4160) {\n              ...GatsbyImageSharpFluid_withWebp\n            }\n          }\n        }\n        mobile: file(relativePath: { eq: \"welcome-ge-mobile.png\" }) {\n          childImageSharp {\n            fluid(quality: 90, maxWidth: 640) {\n              ...GatsbyImageSharpFluid_withWebp\n            }\n          }\n        }\n      }\n    `}\n     render={ data => {\n       // Switch Image according to size on desktop / mobile.\n       const imageData = Width > 640 ?\n           data.desktop.childImageSharp.fluid :\n           data.mobile.childImageSharp.fluid\n       const strippedText = data.welcomeNode.field_body.value\n       return (\n             <div className={className}>\n               <h1>{strippedText}</h1>\n               <StyledWelcomeImage fluid={imageData}/>\n             </div>\n         )\n       }\n     }\n    />\n)\n\nconst StyledWelcomeImage = styled(Img)`\n  width: 50%;\n  height: auto;\n  ${media.greaterThan(\"large\")`\n    width: 30%;\n  `}\n`\n\nconst StyledWelcomeContent = styled(WelcomeContent)`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n  margin: ${ GridGapLineHeightBottomMargin }px ${ WrapperMarginsMobile }px 0;\n  \n  h1 {\n    max-width: ${ WrapperMaxWidthDesktop }px;\n  }\n  \n  ${media.greaterThan(\"medium\")`\n    // margin: calc(${ LargeMargin }px + 75px) ${ WrapperMarginsMobile }px 0;\n    margin-top: calc(${ DefaultMargin } + 104px);\n  `}\n  \n  ${media.greaterThan(\"small\")`\n    margin: calc(${ LargeMargin }px + 75px) ${ WrapperMarginsMobile }px 0;\n  `}\n  \n  ${media.greaterThan(\"321px\")`\n    margin: ${ LargeMargin }px ${ WrapperMarginsMobile }px 0;\n  `}\n`\n\nexport default StyledWelcomeContent","import React from 'react'\nimport { StaticQuery, graphql } from 'gatsby'\nimport Img from 'gatsby-image'\nimport styled from 'styled-components'\nimport {\n  DefaultMargin,\n  // HeaderHeight,\n  // HeaderHeightMobile,\n  LargeMargin,\n  Width\n} from \"../Utils/Constants\";\nimport StyledWelcomeContent from './WelcomeContent'\nimport { media } from '../Utils/Constants'\n\n/**\n * The Welcome Section displays the Hero Image and all content therein.\n * @param className String    From styled components\n */\nconst WelcomeSection = ({ className }) => (\n    <StaticQuery query={graphql`\n      query {\n        desktop: file(relativePath: { eq: \"welcome-bg-desktop.jpg\" }) {\n          childImageSharp {\n            fluid(quality: 100, maxWidth: 4160) {\n              ...GatsbyImageSharpFluid_withWebp\n            }\n          }\n        }\n        mobile: file(relativePath: { eq: \"welcome-bg-mobile.jpg\" }) {\n          childImageSharp {\n            fluid(quality: 90, maxWidth: 640) {\n              ...GatsbyImageSharpFluid_withWebp\n            }\n          }\n        }\n      }\n    `}\n    render={ data => {\n      // Switch Image according to size on desktop / mobile.\n      const imageData = Width > 640 ?\n          data.desktop.childImageSharp.fluid :\n          data.mobile.childImageSharp.fluid\n      return (\n        <section className={className} id='welcome-section'>\n          <StyledWelcomeBackgroundImage fluid={imageData} />\n          <StyledContainer>\n            <StyledWelcomeContent />\n          </StyledContainer>\n        </section>\n      )\n      }\n    }\n    />\n)\n\nconst StyledWelcomeBackgroundImage = styled(Img)`\n  position: absolute;\n  left: 0;\n  top: 0;\n  width: auto;\n  height: 100vh;\n`\n\nconst StyledContainer = styled.div`\n  position: absolute;\n  left: 0;\n  top: 0;\n  padding-top: ${ LargeMargin }px;\n  width: 100%;\n  height: 100vh;\n  \n  ${media.greaterThan(\"small\")`\n    padding-top: ${ DefaultMargin }px;    \n  `}\n`\n\nconst StyledWelcomeSection = styled(WelcomeSection)`\n  width: 100%;\n  height: 100vh;\n  position: relative;\n  overflow: hidden;\n`\n\nexport default StyledWelcomeSection","import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\n/**\n * Maps sliderData to slides (<Slide />) & descriptions (<SlideDescription />).\n * @param sliderData\n * @return {*}\n */\nconst mapSlides = (sliderData) => {\n  const builtSlides = {\n    sliderContents: [],\n    sliderDescriptions: [],\n  }\n  sliderData.forEach((slide, index) => {\n    builtSlides.sliderContents.push(\n      <Slide key={`tech-slide-slide-${index}` }\n             slide={slide}\n             index={index} />)\n    builtSlides.sliderDescriptions.push(\n      <SlideDescription key={`tech-slide-description-${index}` }\n                        slide={slide}\n                        index={index} />)\n  })\n  return builtSlides\n}\n\n\n/**\n * A single slide component.\n * @param slide\n * @param index\n * @return {*}\n * @constructor\n */\nconst Slide = ({ slide, index }) => (\n  <div className=\"slide-wrapper\">\n    {slide.field_fontawesome_icon.trim().indexOf('own-') !== -1 ?\n      <span>\n        {slide.field_fontawesome_icon.trim().replace('own-', '')}\n      </span>\n      : <FontAwesomeIcon\n        icon={['fab', slide.field_fontawesome_icon.trim()]}/>\n    }\n  </div>\n)\n\n\n/**\n * A single slide description component.\n * @param slide\n * @param index\n * @return {*}\n * @constructor\n */\nconst SlideDescription = ({ slide, index }) => (\n  <div className=\"slide-description-wrapper\">\n    <div className=\"slider-info\"\n         dangerouslySetInnerHTML={{\n           __html: slide.fields.markdownDescription.childMarkdownRemark.html,\n         }} />\n  </div>\n)\n\n\nexport default mapSlides","import React from 'react'\nimport { graphql, StaticQuery } from 'gatsby'\nimport styled from 'styled-components'\nimport Slider from 'react-slick'\nimport 'slick-carousel/slick/slick.css'\nimport 'slick-carousel/slick/slick-theme.css'\nimport {\n  media,\n  DefaultMarginAndFontSizeMobile,\n  LightTextColor,\n  SmallMargin\n} from '../Utils/Constants'\nimport mapSlides from './AboutHelpers'\n\n/**\n * Returns the Technology Slider Component.\n * @param className\n * @return {*}\n * @constructor\n */\nclass TechnologySlider extends React.Component {\n  constructor(props) {\n    super(props)\n    this.descriptionSlider = React.createRef()\n  }\n\n  handleBeforeChange = (current, next) =>\n    this.descriptionSlider.current.slickGoTo(next)\n\n  render() {\n    return (\n      <StaticQuery query={graphql`\n      {\n        slider: nodeTechnologiesSlider {\n          title\n          relationships {\n            field_slider_content {\n              field_title\n              field_description {\n                value\n              }\n              fields {\n                markdownDescription {\n                  childMarkdownRemark {\n                    html\n                  }\n                }\n              }\n              field_fontawesome_icon\n            }\n          }\n        }\n      }\n      `}\n      render={data => {\n       const sliderSettings = {\n         className: \"tech-icon-slider\",\n         arrows: false,\n         centerMode: true,\n         infinite: true,\n         slidesToShow: 3,\n         centerPadding: `-1px`,\n         autoplay: true,\n         speed: 500,\n         pauseOnFocus: true,\n         beforeChange: (current, next) => this.handleBeforeChange(current, next),\n       }\n       const descriptionSettings = {\n         className: \"center\",\n         centerMode: true,\n         infinite: true,\n         slidesToShow: 1,\n         centerPadding: `0`,\n         pauseOnHover: false,\n         autoplay: false,\n         draggable: false,\n         swipe: false,\n         touchMove: false,\n       }\n       const title = data.slider.title\n       const sliderData = data.slider.relationships.field_slider_content\n       // console.log(sliderData)\n       const {sliderContents, sliderDescriptions} = mapSlides(sliderData)\n       return (\n           <StyledTechnologySliderWrapper>\n             <h3 className=\"light-heading\">{title}</h3>\n             <Slider {...sliderSettings}>\n               {sliderContents}\n             </Slider>\n             <Slider ref={this.descriptionSlider} {...descriptionSettings}>\n               {sliderDescriptions}\n             </Slider>\n           </StyledTechnologySliderWrapper>\n         )\n       }\n      }\n      />\n    )\n  }\n}\n\nconst StyledTechnologySliderWrapper = styled.div`\n  width: 320px;\n  \n  h3 {\n    margin-bottom: ${ SmallMargin }px;\n  }\n  \n  .tech-icon-slider {\n    .slide-wrapper {\n      svg, span {\n        color: ${LightTextColor};\n        font-size: 2rem;\n        height: 4rem;\n        transition: all 200ms linear;\n        filter: blur(1px);\n      }\n    }\n    .slick-current {\n      svg, span {\n        font-size: 4rem;\n        filter: none;\n      }\n    }\n  }\n  \n  .slide-wrapper, .slide-description-wrapper { \n    max-width: 320px;\n  }\n  \n  .slider-info p {\n    color: ${ LightTextColor };\n  }\n \n  \n  ${media.lessThan(\"medium\")`\n    display: block;\n    margin-bottom: ${ DefaultMarginAndFontSizeMobile }px;\n  `}\n`\n\nexport default TechnologySlider","import React from 'react'\nimport { StaticQuery, graphql } from 'gatsby'\nimport Img from 'gatsby-image'\nimport styled from 'styled-components'\nimport {\n  media,\n  WrapperMarginsMobile,\n  DefaultMarginAndFontSizeMobile,\n  GridGapLineHeightBottomMargin\n} from '../Utils/Constants'\nimport TechnologySlider from \"./TechnologySlider\";\n// import { stripGutenbergTags } from \"../Utils/HelperFunctions\"\n\n/**\n * The About Content displays the children of the About Screen.\n *\n * @param className String    From styled components\n */\nconst AboutContent = ({ className }) => (\n    <StaticQuery query={graphql`\n      query {\n        aboutNode: nodeBasicContent(title: {eq: \"About Me\"}) {\n          title\n          field_body {\n            value\n            format\n            processed\n          }\n          fields {\n            markdownBody {\n              childMarkdownRemark {\n                html\n              }\n            }\n          }\n          relationships {\n            field_additional_image {\n              localFile {\n                childImageSharp {\n                  fluid(quality: 90, maxWidth: 960) {\n                    ...GatsbyImageSharpFluid_withWebp\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    `}\n     render={ data => {\n       const title = data.aboutNode.title\n       const strippedText = data.aboutNode.fields\n           .markdownBody.childMarkdownRemark.html\n       const aboutImageData = data.aboutNode.relationships\n           .field_additional_image.localFile.childImageSharp.fluid\n       return (\n             <div className={className}>\n               <article>\n                 <h2 className=\"light-heading\">{title}</h2>\n                 <div className=\"light-text\" dangerouslySetInnerHTML={{\n                   __html: strippedText,\n                 }} />\n                 <TechnologySlider />\n               </article>\n               <StyledAboutImage fluid={aboutImageData}/>\n             </div>\n         )\n       }\n     }\n    />\n)\n\nconst StyledAboutImage = styled(Img)`\n  width: 100%;\n  height: auto;\n  \n  img {\n    object-fit: contain !important;\n  }\n  \n  ${media.lessThan(\"medium\")`\n     margin-top: ${ DefaultMarginAndFontSizeMobile }px;\n  `}\n`\n\nconst StyledAboutContent = styled(AboutContent)`\n  display: grid;\n  grid-template-columns: 3fr 2fr;\n  grid-gap: ${ GridGapLineHeightBottomMargin }px; \n  \n  ${media.lessThan(\"large\")`\n     margin: 0 ${ WrapperMarginsMobile }px;\n  `}\n  \n  ${media.lessThan(\"medium\")`\n    display: block;\n  `}\n`\n\nexport default StyledAboutContent","import React from 'react'\nimport styled from 'styled-components'\nimport {\n  DefaultMargin,\n  DefaultMarginAndFontSizeMobile,\n  WrapperMarginsMobile,\n  WrapperMaxWidthDesktop,\n  WrapperMaxWidthMobile\n} from \"../Utils/Constants\"\nimport StyledAboutContent from './AboutContent'\nimport { media } from '../Utils/Constants'\n\n/**\n * The About Section displays the correctly positioned about content therein.\n * @param className String    From styled components\n */\nconst AboutSection = ({ className }) => (\n    <section className={className} id=\"about_me\">\n      <StyledAboutContent />\n    </section>\n)\n\nconst StyledAboutSection = styled(AboutSection)`\n  position: relative;\n  max-width: ${ WrapperMaxWidthMobile }px;\n  margin: ${ DefaultMarginAndFontSizeMobile }px ${ WrapperMarginsMobile }px;\n  \n  ${media.greaterThan(\"small\")`\n    margin: ${ DefaultMarginAndFontSizeMobile }px auto;\n  `}\n  \n  ${media.greaterThan(\"medium\")`\n    max-width: ${ WrapperMaxWidthDesktop }px;\n    margin: ${ DefaultMargin }px auto;\n  `}\n`\n\nexport default StyledAboutSection","import React from 'react'\nimport PropTypes from 'prop-types'\nimport getBackgroundStyles from './BackgroundUtils'\n\n// Handle legacy names for image queries.\nconst convertProps = props => {\n  let convertedProps = { ...props }\n  if (convertedProps.resolutions) {\n    convertedProps.fixed = convertedProps.resolutions\n    delete convertedProps.resolutions\n  }\n  if (convertedProps.sizes) {\n    convertedProps.fluid = convertedProps.sizes\n    delete convertedProps.sizes\n  }\n\n  return convertedProps\n}\n\n// Cache if we've seen an image before so we don't both with\n// lazy-loading & fading in on subsequent mounts.\nconst imageCache = {}\nconst inImageCache = props => {\n  const convertedProps = convertProps(props)\n  // Find src\n  const src = convertedProps.fluid\n      ? convertedProps.fluid.src\n      : convertedProps.fixed.src\n\n  return imageCache[src] || false\n}\n\nconst activateCacheForImage = props => {\n  const convertedProps = convertProps(props)\n  // Find src\n  const src = convertedProps.fluid\n    ? convertedProps.fluid.src\n    : convertedProps.fixed.src\n\n  imageCache[src] = true\n}\n\nlet io\nconst listeners = []\n\nfunction getIO() {\n  if (\n      typeof io === `undefined` &&\n      typeof window !== `undefined` &&\n      window.IntersectionObserver\n  ) {\n    io = new window.IntersectionObserver(\n        entries => {\n          entries.forEach(entry => {\n            listeners.forEach(l => {\n              if (l[0] === entry.target) {\n                // Edge doesn't currently support isIntersecting, so also test for an intersectionRatio > 0\n                if (entry.isIntersecting || entry.intersectionRatio > 0) {\n                  io.unobserve(l[0])\n                  l[1]()\n                }\n              }\n            })\n          })\n        },\n        { rootMargin: `200px` }\n    )\n  }\n\n  return io\n}\n\nconst listenToIntersections = (el, cb) => {\n  getIO().observe(el)\n  listeners.push([el, cb])\n}\n\nconst noscriptImg = props => {\n  // Check if prop exists before adding each attribute to the string output below to prevent\n  // HTML validation issues caused by empty values like width=\"\" and height=\"\"\n  const src = props.src ? `src=\"${props.src}\" ` : `src=\"\" ` // required attribute\n  const sizes = props.sizes ? `sizes=\"${props.sizes}\" ` : ``\n  const srcSetWebp = props.srcSetWebp\n    ? `<source type='image/webp' srcSet=\"${props.srcSetWebp}\" ${sizes}/>`\n    : ``\n  const srcSet = props.srcSet\n    ? `<source srcSet=\"${props.srcSet}\" ${sizes}/>`\n    : ``\n  const title = props.title ? `title=\"${props.title}\" ` : ``\n  const alt = props.alt ? `alt=\"${props.alt}\" ` : `alt=\"\" ` // required attribute\n  const width = props.width ? `width=\"${props.width}\" ` : ``\n  const height = props.height ? `height=\"${props.height}\" ` : ``\n  const opacity = props.opacity ? props.opacity : `1`\n  const transitionDelay = props.transitionDelay ? props.transitionDelay : `0.5s`\n  return `<picture>${srcSetWebp}${srcSet}<img ${width}${height}${src}${alt}${title}style=\"position:absolute;top:0;left:0;transition:opacity 0.5s;transition-delay:${transitionDelay};opacity:${opacity};width:100%;height:100%;object-fit:cover;object-position:center\"/></picture>`\n}\n\nconst Img = React.forwardRef((props, ref) => {\n  const { style, onLoad, onError, alt, ...otherProps } = props\n  return (\n    <img\n      {...otherProps}\n      alt={alt}\n      onLoad={onLoad}\n      onError={onError}\n      ref={ref}\n      style={{\n        position: `absolute`,\n        top: 0,\n        left: 0,\n        width: `100%`,\n        height: `100%`,\n        objectFit: `cover`,\n        objectPosition: `center`,\n        ...style,\n      }}\n  />\n  )\n})\n\nImg.propTypes = {\n  style: PropTypes.object,\n  onError: PropTypes.func,\n  onLoad: PropTypes.func,\n}\n\nclass BackgroundImage extends React.Component {\n  constructor(props) {\n    super(props)\n\n    // default settings for browser without Intersection Observer available\n    let isVisible = true\n    let imgLoaded = false\n    let IOSupported = false\n    let fadeIn = props.fadeIn\n\n    // If this image has already been loaded before then we can assume it's\n    // already in the browser cache so it's cheap to just show directly.\n    const seenBefore = inImageCache(props)\n\n    // browser with Intersection Observer available\n    if (\n        !seenBefore &&\n        typeof window !== `undefined` &&\n        window.IntersectionObserver\n    ) {\n      isVisible = false\n      IOSupported = true\n    }\n\n    // Never render image during SSR\n    if (typeof window === `undefined`) {\n      isVisible = false\n    }\n\n    // Force render for critical images\n    if (props.critical) {\n      isVisible = true\n      IOSupported = false\n    }\n\n    const hasNoScript =  !(this.props.critical && !this.props.fadeIn)\n\n    this.state = {\n      isVisible,\n      imgLoaded,\n      IOSupported,\n      fadeIn,\n      hasNoScript,\n      seenBefore,\n    }\n\n    this.bgImage = ``\n\n    // Get background(-*) styles from CSS (e.g. Styled Components).\n    this.backgroundStyles = getBackgroundStyles(this.props.className)\n\n    this.imageRef = React.createRef()\n    this.handleImageLoaded = this.handleImageLoaded.bind(this)\n    this.handleRef = this.handleRef.bind(this)\n  }\n\n  componentDidMount() {\n    if (this.state.isVisible && typeof this.props.onStartLoad === `function`) {\n      this.props.onStartLoad({ wasCached: inImageCache(this.props) })\n    }\n    if (this.props.critical) {\n      const img = this.imageRef.current\n      if (img && img.complete) {\n        this.handleImageLoaded()\n      }\n    }\n\n  }\n\n  handleRef(ref) {\n    if (this.state.IOSupported && ref) {\n      listenToIntersections(ref, () => {\n        if (\n          !this.state.isVisible &&\n          typeof this.props.onStartLoad === `function`\n        ) {\n          this.props.onStartLoad({ wasCached: inImageCache(this.props) })\n        }\n\n        this.setState({ isVisible: true, imgLoaded: false })\n      })\n    }\n  }\n\n  handleImageLoaded() {\n    activateCacheForImage(this.props)\n    this.setState({ imgLoaded: true })\n    if (this.state.seenBefore) {\n      this.setState({ fadeIn: false })\n    }\n    this.props.onLoad && this.props.onLoad()\n  }\n\n  render() {\n    const {\n      title,\n      alt,\n      className,\n      style = {},\n      imgStyle = {},\n      placeholderStyle = {},\n      placeholderClassName,\n      fluid,\n      fixed,\n      backgroundColor,\n      Tag,\n      id,\n      children\n    } = convertProps(this.props)\n\n    const bgColor =\n      typeof backgroundColor === `boolean` ? `lightgray` : backgroundColor\n\n    const imagePlaceholderStyle = {\n      opacity: this.state.imgLoaded ? 0 : 1,\n      transition: `opacity 0.5s`,\n      transitionDelay: this.state.imgLoaded ? `0.5s` : `0.25s`,\n      ...imgStyle,\n      ...placeholderStyle,\n    }\n\n    const imageStyle = {\n      opacity: this.state.imgLoaded || this.state.fadeIn === false ? 1 : 0,\n      transition: this.state.fadeIn === true ? `opacity 0.5s` : `none`,\n      ...imgStyle,\n    }\n\n    const placeholderImageProps = {\n      title,\n      alt: !this.state.isVisible ? alt : ``,\n      style: imagePlaceholderStyle,\n      className: placeholderClassName,\n    }\n\n    if (fluid) {\n      const image = fluid\n\n      // Set the backgroundImage according to images available.\n      let bgImage = this.bgImage,\n          nextImage = ``\n      if (image.tracedSVG) nextImage = `'${ image.tracedSVG }'`\n      if (image.base64 && !image.tracedSVG) nextImage = image.base64\n      if (this.state.isVisible) nextImage = image.src\n\n      // Switch bgImage & nextImage and opacity accordingly.\n      bgImage = bgImage === `` ? nextImage : ``\n      const afterOpacity = nextImage !== bgImage ? 1 : 0\n\n      // console.log('bgImage: ' + bgImage, '\\nnextImage: ' + nextImage,\n      //     '\\nafterOpacity: ' + afterOpacity, bgColor)\n\n      this.bgImage = bgImage\n\n      return (\n          <Tag\n              id={id}\n              className={`${className ? className : ``} after-background-image-${id} gatsby-image-wrapper`}\n              style={{\n                position: `relative`,\n                overflow: `hidden`,\n                backgroundColor: bgColor,\n                backgroundImage: `url(${ bgImage })`,\n                // backgroundRepeat: `no-repeat`,\n                backgroundSize: `cover`,\n                transition: `background 0.2s ease-in-out`,\n                // transitionDelay: transitionDelay,\n                // zIndex: -1,\n                ...style,\n                ...this.backgroundStyles,\n              }}\n              ref={this.handleRef}\n              key={`fluid-${JSON.stringify(image.srcSet)}`}\n          >\n            <style dangerouslySetInnerHTML={{\n              __html:`\n                .after-background-image-${id}:after {\n                  background: url(${nextImage}) repeat;\n                  content: \"\";\n                  opacity: ${afterOpacity};\n                  width: 100%;\n                  height: 100%;\n                  position: absolute;\n                  top: 0;\n                  left: 0;\n                  z-index: -1;\n                  transition: opacity 0.25s ease-in-out;\n                  -webkit-transition: opacity 0.25s ease-in-out;\n                  -moz-transition: opacity 0.25s ease-in-out;\n                  -o-transition: opacity 0.25s ease-in-out;\n                }\n              `\n            }}>\n            </style>\n            {/* Show the blurry base64 image. */}\n            {image.base64 && (\n                <Img\n                    alt={!this.state.isVisible ? alt : ``}\n                    title={title}\n                    src={image.base64}\n                    style={{...imagePlaceholderStyle,\n                      // Prevent Gatsby Image from being shown, as we only need it for the Backgrounds.\n                      display: `none`,\n                    }}\n\t\t\t\t\t\t\t\t\t\t{...placeholderImageProps}\n                />\n            )}\n\n            {/* Show the traced SVG image. */}\n            {image.tracedSVG && (\n                <Img\n                    alt={!this.state.isVisible ? alt : ``}\n                    title={title}\n                    src={image.tracedSVG}\n                    style={{...imagePlaceholderStyle,\n                      // Prevent Gatsby Image from being shown, as we only need it for the Backgrounds.\n                      display: `none`,\n                    }}\n\t\t\t\t\t\t\t\t\t\t{...placeholderImageProps}\n                />\n            )}\n\n             {/*Show a solid background color. */}\n            {/*{bgColor && (*/}\n                {/*<Tag*/}\n                    {/*title={title}*/}\n                    {/*style={{*/}\n                      {/*backgroundColor: bgColor,*/}\n                      {/*position: `absolute`,*/}\n                      {/*top: 0,*/}\n                      {/*bottom: 0,*/}\n                      {/*opacity: !this.state.imgLoaded ? 1 : 0,*/}\n                      {/*transitionDelay: `0.35s`,*/}\n                      {/*right: 0,*/}\n                      {/*left: 0,*/}\n                    {/*}}*/}\n                {/*/>*/}\n            {/*)}*/}\n\n            {/* Once the image is visible (or the browser doesn't support IntersectionObserver), start downloading the image */}\n            {this.state.isVisible && (\n                <picture style={{\n                  // Prevent Gatsby Image from being shown, as we only need it for the Backgrounds.\n                  display: `none`,\n                }}>\n                  {image.srcSetWebp && (<source\n                      type={`image/webp`}\n                      srcSet={image.srcSetWebp}\n                      sizes={image.sizes}\n                  />)}\n\n                  <source\n                      srcSet={image.srcSet}\n                      sizes={image.sizes}\n                  />\n\n                  <Img\n                      alt={alt}\n                      title={title}\n                      src={image.src}\n                      style={imageStyle}\n                      ref={this.imageRef}\n                      onLoad={this.handleImageLoaded}\n                      onError={this.props.onError}\n                  />\n                </picture>\n            )}\n\n            {/* Show the original image during server-side rendering if JavaScript is disabled */}\n            {this.state.hasNoScript && (\n                <noscript\n                    dangerouslySetInnerHTML={{\n                      __html: noscriptImg({ alt, title, ...image }),\n                    }}\n                />\n            )}\n            {children}\n          </Tag>\n      )\n    }\n\n    if (fixed) {\n      const image = fixed\n      const divStyle = {\n        position: `relative`,\n        overflow: `hidden`,\n        display: `inline-block`,\n        width: image.width,\n        height: image.height,\n        ...style,\n      }\n\n      if (style.display === `inherit`) {\n        delete divStyle.display\n      }\n\n      // Set the backgroundImage according to images available.\n      let bgImage = ``,\n          nextImage = ``\n      if (image.tracedSVG) nextImage = `'${ image.tracedSVG }'`\n      if (image.base64 && !image.tracedSVG) nextImage = image.base64\n      if (this.state.isVisible) nextImage = image.src\n      // Switch bgImage & nextImage and opacity accordingly.\n      bgImage = bgImage === `` ? nextImage : ``\n      const afterOpacity = nextImage !== bgImage ? 1 : 0\n\n      // console.log(this.backgroundStyles)\n\n      return (\n          <Tag\n              id={id}\n              className={`${className ? className : ``} gatsby-image-wrapper`}\n              style={{\n                position: `relative`,\n                overflow: `hidden`,\n                backgroundImage: `url(${ bgImage })`,\n                // backgroundRepeat: `no-repeat`,\n                backgroundSize: `cover`,\n                transition: `background 0.2s ease-in-out`,\n                zIndex: -1,\n                ...divStyle,\n                ...this.backgroundStyles,\n              }}\n              ref={this.handleRef}\n              key={`fixed-${JSON.stringify(image.srcSet)}`}\n          >\n            <style dangerouslySetInnerHTML={{\n              __html:\n                  `.my-special-div:after {\n                background: url(${nextImage}) repeat;\n                content: \"\";\n                opacity: ${afterOpacity};\n                width: 100%;\n                height: 100%;\n                position: absolute;\n                top: 0;\n                left: 0;\n                z-index: -2;\n                /* TRANSISITION */\n                transition: opacity 1s ease-in-out;\n                -webkit-transition: opacity 1s ease-in-out;\n                -moz-transition: opacity 1s ease-in-out;\n                -o-transition: opacity 1s ease-in-out;\n            }`\n            }}>\n            </style>\n            {/* Show the blurry base64 image. */}\n            {image.base64 && (\n                <Img\n                    alt={!this.state.isVisible ? alt : ``}\n                    title={title}\n                    src={image.base64}\n                    style={{...imagePlaceholderStyle,\n                      // Prevent Gatsby Image from being shown, as we only need it for the Backgrounds.\n                      display: `none`,\n                    }}\n\t\t\t\t\t\t\t\t\t\t{...placeholderImageProps}\n                />\n            )}\n\n            {/* Show the traced SVG image. */}\n            {image.tracedSVG && (\n                <Img\n                    alt={!this.state.isVisible ? alt : ``}\n                    title={title}\n                    src={image.tracedSVG}\n                    style={{...imagePlaceholderStyle,\n                      // Prevent Gatsby Image from being shown, as we only need it for the Backgrounds.\n                      display: `none`,\n                    }}\n\t\t\t\t\t\t\t\t\t\t{...placeholderImageProps}\n                />\n            )}\n\n            {/* Show a solid background color. */}\n            {bgColor && (\n                <Tag\n                    title={title}\n                    style={{\n                      backgroundColor: bgColor,\n                      width: image.width,\n                      opacity: !this.state.imgLoaded ? 1 : 0,\n                      transitionDelay: `0.25s`,\n                      height: image.height,\n                    }}\n                />\n            )}\n\n            {/* Once the image is visible, start downloading the image */}\n            {this.state.isVisible && (\n                <picture style={{\n                  // Prevent Gatsby Image from being shown, as we only need it for the Backgrounds.\n                  display: `none`,\n                }}>\n                  {image.srcSetWebp && (<source\n                      type={`image/webp`}\n                      srcSet={image.srcSetWebp}\n                      sizes={image.sizes}\n                  />)}\n\n                  <source\n                      srcSet={image.srcSet}\n                      sizes={image.sizes}\n                  />\n\n                  <Img\n                      alt={alt}\n                      title={title}\n                      width={image.width}\n                      height={image.height}\n                      src={image.src}\n                      style={imageStyle}\n                      ref={this.imageRef}\n                      onLoad={this.handleImageLoaded}\n                      onError={this.props.onError}\n                  />\n                </picture>\n            )}\n\n            {/* Show the original image during server-side rendering if JavaScript is disabled */}\n            {this.state.hasNoScript && (\n                <noscript\n                    dangerouslySetInnerHTML={{\n                      __html: noscriptImg({\n                        alt,\n                        title,\n                        width: image.width,\n                        height: image.height,\n                        ...image,\n                      }),\n                    }}\n                />\n            )}\n          </Tag>\n      )\n    }\n\n    return null\n  }\n}\n\nBackgroundImage.defaultProps = {\n  critical: false,\n  fadeIn: true,\n  alt: ``,\n  Tag: `div`,\n}\n\nconst fixedObject = PropTypes.shape({\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired,\n  src: PropTypes.string.isRequired,\n  srcSet: PropTypes.string.isRequired,\n  base64: PropTypes.string,\n  tracedSVG: PropTypes.string,\n  srcWebp: PropTypes.string,\n  srcSetWebp: PropTypes.string,\n})\n\nconst fluidObject = PropTypes.shape({\n  aspectRatio: PropTypes.number.isRequired,\n  src: PropTypes.string.isRequired,\n  srcSet: PropTypes.string.isRequired,\n  sizes: PropTypes.string.isRequired,\n  base64: PropTypes.string,\n  tracedSVG: PropTypes.string,\n  srcWebp: PropTypes.string,\n  srcSetWebp: PropTypes.string,\n})\n\nBackgroundImage.propTypes = {\n  resolutions: fixedObject,\n  sizes: fluidObject,\n  fixed: fixedObject,\n  fluid: fluidObject,\n  fadeIn: PropTypes.bool,\n  title: PropTypes.string,\n  alt: PropTypes.string,\n  className: PropTypes.oneOfType([PropTypes.string, PropTypes.object]), // Support Glamor's css prop.\n  critical: PropTypes.bool,\n  style: PropTypes.object,\n  imgStyle: PropTypes.object,\n  placeholderStyle: PropTypes.object,\n  placeholderClassName: PropTypes.string,\n  backgroundColor: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n  onLoad: PropTypes.func,\n  onError: PropTypes.func,\n  onStartLoad: PropTypes.func,\n  Tag: PropTypes.string,\n  id: PropTypes.string,\n}\n\nexport default BackgroundImage\n","/**\n * Gets styles by a class name.\n *\n * @notice The className has to exactly match the CSS class\n * @param className string\n */\nconst getStyle = className => {\n  const styleSheets = typeof window !== `undefined` ?\n      window.document.styleSheets : []\n  for (let i = 0; i < styleSheets.length; i++) {\n    const classes = styleSheets[i].rules || styleSheets[i].cssRules\n    if (!classes)\n      continue;\n    for (let x = 0; x < classes.length; x++) {\n      if (classes[x].selectorText === className) {\n        let ret;\n        if(classes[x].cssText){\n          ret = classes[x].cssText\n        } else {\n          ret = classes[x].style.cssText\n        }\n        if(ret.indexOf(classes[x].selectorText) === -1){\n          ret = `${classes[x].selectorText}{${ret}}`\n        }\n        return ret\n      }\n    }\n  }\n}\n\n/**\n * Gets rules from a css Text.\n *\n * @param styleContent\n * @return {*}\n */\nconst rulesForCssText = function (styleContent) {\n  if (typeof document !== `undefined`) {\n    const doc = document.implementation.createHTMLDocument(\"\"),\n          styleElement = document.createElement(\"style\")\n\n    styleElement.textContent = styleContent\n    // the style will only be parsed once it is added to a document\n    doc.body.appendChild(styleElement)\n\n    return styleElement.sheet.cssRules\n  }\n  return {}\n}\n\n/**\n * Filters out Background Rules for a given class Name.\n * @param className\n * @return {{}}\n */\nconst getBackgroundStylesForSingleClass = className => {\n  const style = getStyle(`.${className}`)\n  const cssStyleRules = rulesForCssText(style)\n  // console.log(className, style, cssStyleRules)\n  if (cssStyleRules.length > 0 &&\n      typeof(cssStyleRules[0].style) !== 'undefined') {\n    // Filter out background(-*) rules that contain a definition.\n    return Object.keys(cssStyleRules[0].style)\n        .filter(k =>\n            k.indexOf('background') === 0 && cssStyleRules[0].style[k] !== '')\n        .reduce((newData, k) => {\n          newData[k] = cssStyleRules[0].style[k]\n          return newData\n        }, {})\n  }\n  return {}\n}\n\n/**\n * Uses the above to get all background(-*) rules from given classes.\n * TODO: get classes for media queries...\n *\n * @param className\n * @return {*}\n */\nconst getBackgroundStyles = className => {\n  if (typeof(window) !== 'undefined' && className.includes(' ')) {\n    const classes = className.split(' ')\n    let classObjects = []\n    classes.forEach(item =>\n        classObjects.push(getBackgroundStylesForSingleClass(item))\n    )\n    return Object.assign(...classObjects)\n  }\n  return getBackgroundStylesForSingleClass(className)\n}\n\nexport default getBackgroundStyles\n\n\n\n","import React from 'react'\nimport styled from \"styled-components\"\nimport { media } from '../Utils/Constants'\nimport {\n  LargeMargin,\n  DefaultMarginAndFontSizeMobile,\n  GridGapLineHeightBottomMargin,\n} from \"../Utils/Constants\"\n\n/**\n * This Styled Component wraps the Footer.\n *\n * @param className String    From styled components\n */\nconst CopyrightSection = ({ className }) => (\n    <div className={className}>\n      <StyledParagraph>&copy; Tim Hagn</StyledParagraph>\n    </div>\n)\n\nconst StyledParagraph = styled.p`\n  position: absolute;\n  top: 0;\n  width: 100%;\n  text-align: center;\n`\n\nconst StyledCopyrightSection = styled(CopyrightSection)`\n  position: relative;\n  overflow: hidden;\n  height: calc(${ LargeMargin }px + ${ GridGapLineHeightBottomMargin }px);\n  \n  ${media.lessThan(\"medium\")`\n    height: calc(${ DefaultMarginAndFontSizeMobile }px + 23px);\n  `}\n`\n\nexport default StyledCopyrightSection","import React from 'react'\nimport Button from '../Utils/Button'\nimport PropTypes from \"prop-types\"\nimport styled from \"styled-components\";\nimport {SmallMargin} from \"../Utils/Constants\";\n\n/**\n * Generates the Buttons for an individual Project.\n * @param className\n * @param projectData\n * @return {*}\n * @constructor\n */\nconst ProjectButtons = ({ className, projectData }) => {\n  const {\n    projectTitle,\n    projectLink,\n    projectLinkTitle,\n    projectCodeLink,\n    projectCodeLinkTitle,\n  } = projectData\n  const projectLinkButton = projectLink &&\n      <StyledProjectButton to={ projectLink }\n              aria-label={ projectLinkTitle ?\n                  projectLinkTitle :\n                  `${projectTitle} Page Link` }\n              target=\"_blank\">\n        {projectLinkTitle ? projectLinkTitle : `Project Page` }\n      </StyledProjectButton>\n  const projectCodeLinkButton = projectCodeLink &&\n      <StyledProjectButton to={ projectCodeLink }\n                           aria-label={ projectCodeLinkTitle ?\n                               projectCodeLinkTitle :\n                               `${projectTitle} Code Link` }\n                           target=\"_blank\">\n        { projectCodeLinkTitle ?\n            projectCodeLinkTitle :\n            `${ projectTitle }'s Code` }\n      </StyledProjectButton>\n  return (\n      <div className={className}>\n        {projectLinkButton}\n        {projectCodeLinkButton}\n      </div>\n  )\n}\n\nProjectButtons.propTypes = {\n  projectData: PropTypes.object.isRequired,\n}\n\nexport const StyledProjectButton = styled(Button)`\n  font-size: 14px;\n  font-weight: 500;\n  margin-right: ${ SmallMargin }px;\n  transition: all 400ms;\n  max-height: 39px;\n`\n\nconst StyledProjectButtons = styled(ProjectButtons)`\n  display: flex;\n  \n`\n\nexport default StyledProjectButtons\n\n","import React from 'react'\nimport PropTypes from \"prop-types\"\nimport Img from 'gatsby-image'\nimport styled from 'styled-components'\nimport {\n  DefaultMarginAndFontSizeMobile,\n  // GridGapLineHeightBottomMargin,\n  LargeMargin,\n  media,\n  SmallMargin\n} from '../Utils/Constants'\nimport StyledProjectButtons from './ProjectButton'\n\n/**\n * Displays a single Project.\n *\n * @param className String    From styled components\n * @param id\n * @param projectData\n */\nconst Project = ({ className, id, projectData }) => {\n  const {\n    projectImageData,\n    projectTitle,\n    projectText,\n  } = projectData;\n  // console.log(id)\n  return (\n      <article id={id} className={`project-tile ${className}`} >\n        <StyledImageContainer>\n          <StyledProjectImage fluid={projectImageData}/>\n        </StyledImageContainer>\n        <h3>{projectTitle}</h3>\n        <div className=\"project-text-content\"\n             dangerouslySetInnerHTML={{\n              __html: projectText,\n             }} />\n        <StyledProjectButtons projectData={projectData} />\n      </article>\n  )\n}\n\nProject.propTypes = {\n  projectData: PropTypes.object.isRequired,\n}\n\nconst StyledProjectImage = styled(Img)`\n  width: 100%;\n  height: auto;\n`\n\nconst StyledImageContainer = styled.div`\n  margin-bottom: ${ SmallMargin }px;\n\n`\n\nconst StyledProject = styled(Project)`\n  display: grid;\n  grid-template-rows: 0 200px max-content 1fr 0.3fr;\n  //minmax(auto, max-content) 58px minmax(min-content, auto) minmax(auto, min-content);\n  margin-bottom: ${ LargeMargin }px;\n  \n  h3 {\n    margin-bottom: ${ SmallMargin }px;\n    height: 2em;\n  }\n  \n  .project-text-content {\n    margin-bottom: ${ SmallMargin }px;\n\n    p {\n      margin-bottom: 0;\n    }\n    \n    a {\n      font-weight: 500;\n      color: #07D8AE;\n      transition: all 400ms;\n      &:hover {\n        color: #00f9c7;\n      }\n      &:visited {\n        color: #00f9c7;\n      }\n    }\n  }  \n  \n  ${media.lessThan(\"medium\")`\n    display: block;\n    margin-bottom: ${ DefaultMarginAndFontSizeMobile }px;\n    \n    p.project-text-content {\n      min-height: auto;\n    }\n  `}\n`\n\nexport default StyledProject","import React from 'react'\nimport { StaticQuery, graphql } from 'gatsby'\nimport styled from 'styled-components'\nimport {\n  media,\n  WrapperMarginsMobile,\n  GridGapLineHeightBottomMargin,\n} from '../Utils/Constants'\nimport { mapProjects } from \"./ProjectHelpers\";\n\n/**\n * Displays the Projects.\n *\n * @param className String    From styled components\n * @param projectsToShow\n */\nconst Projects = ({ className, projectsToShow = 3 }) => (\n    <StaticQuery query={graphql`\n      query {\n        projects: allNodeProject(filter: {status: {eq: true},}\n  \t\t\t\t\t\t\t sort: {fields: [sticky, changed]\n                \t\t\t\torder: DESC}) {\n          edges {\n            node {\n              id\n              title\n              promote\n              sticky\n              body {\n                value\n                format\n                processed\n                summary\n              }\n              field_project_link {\n                uri\n                title\n              }\n              field_project_source_link {\n                uri\n                title\n              }\n              fields {\n                markdownBody {\n                  childMarkdownRemark {\n                    html\n                  }\n                }\n              }\n              relationships {\n                field_project_image {\n                  localFile {\n                    childImageSharp {\n                      fluid(quality: 90, maxWidth: 960) {\n                        ...GatsbyImageSharpFluid_withWebp\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        },\n        dummyImage: file(relativePath: { eq: \"DUMMY.jpg\" }) {\n          childImageSharp {\n            fluid(quality: 100, maxWidth: 960) {\n              ...GatsbyImageSharpFluid_withWebp\n            }\n          }\n        }\n      }\n    `}\n     render={ data => {\n       const projects = mapProjects(data.projects, data.dummyImage, projectsToShow)\n       return (\n           <div className={className}>\n             {projects}\n           </div>\n       )\n       }\n     }\n    />\n)\n\nconst StyledProjects = styled(Projects)`\n  grid-template-columns: repeat(3, 1fr);\n  display: block;\n  \n  ${media.greaterThan(\"medium\")`\n    display: grid;\n    margin: 0 ${ WrapperMarginsMobile }px;\n    grid-gap: ${ GridGapLineHeightBottomMargin }px;\n  `}\n`\n\nexport default StyledProjects","import React from 'react'\nimport StyledProject from './Project'\n\n/**\n * Maps the projectData to projects.\n * @param projects\n * @param dummyImage\n * @param projectsToShow\n */\nexport const mapProjects = (projects, dummyImage, projectsToShow = 3) =>\n  projects.edges.slice(0, projectsToShow).map((item, key) => {\n    const projectData = {\n      projectImageData:\n        item.node.relationships.field_project_image !== null ?\n          item.node.relationships.field_project_image\n            .localFile.childImageSharp.fluid :\n          dummyImage.childImageSharp.fluid,\n      projectTitle: item.node.title,\n      projectText: item.node.fields.markdownBody.childMarkdownRemark.html,\n      projectLink: item.node.field_project_link !== null ?\n        item.node.field_project_link.uri : '',\n      projectLinkTitle: item.node.field_project_link !== null ?\n        item.node.field_project_link.title : '',\n      projectCodeLink: item.node.field_project_source_link !== null ?\n        item.node.field_project_source_link.uri : '',\n      projectCodeLinkTitle: item.node.field_project_source_link !== null ?\n        item.node.field_project_source_link.title : '',\n    }\n    // console.log(projectData)\n    return <StyledProject\n      id={`styled-project-${key}`}\n      key={`styled-project-${key}`}\n      projectData={projectData} />\n  })","import React from 'react'\nimport styled from 'styled-components'\nimport {\n  DarkLinkHoverVisited,\n} from '../Utils/Constants'\nimport { graphql, StaticQuery } from 'gatsby'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\n/**\n * \"Loads\" more projects.\n */\nconst ShowMore = ({ className, onClick, projectCount, children, ...other }) => (\n    <StaticQuery query={graphql`\n      query {\n        projects: allNodeProject {\n            totalCount\n        }\n      }\n    `}\n     render={ data => {\n         // Hide ShowMoreButton on no more data.\n         const hideButtonClass =\n             projectCount >= data.projects.totalCount ? ` hide-show-more` : ``\n         return (\n             <button id=\"show-more\"\n                     className={`${className}${hideButtonClass}`}\n                     onClick={onClick}\n                     {...other}>\n               show more\n               <FontAwesomeIcon icon=\"angle-down\"\n                                size=\"lg\"\n                                style={{\n                                  marginLeft: 13,\n                                  fontSize: `2rem`,\n                                  verticalAlign: `-0.725rem`,\n                                }} />\n             </button>\n         )\n       }\n     }\n    />\n)\n\n\nconst ShowMoreButton = styled(ShowMore)`\n  width: 100%;\n  height: 52px;\n  background-color: transparent;\n  color: ${ DarkLinkHoverVisited };\n  border: 1px solid ${ DarkLinkHoverVisited };\n  border-radius: 20px;\n  font-size: 14px;\n  font-weight: 700;\n  transition: all 400ms;\n  \n  &:hover {\n    background-color: rgba(0, 249, 199, 0.2);\n    color: ${ DarkLinkHoverVisited };\n  }\n  \n  &:focus {\n    border: 2px solid ${ DarkLinkHoverVisited };\n    border-radius: 20px;\n  }\n`\n\nexport default ShowMoreButton","import React from 'react'\nimport styled from \"styled-components\"\n\nimport {\n  DarkLinkHoverVisited,\n  LightHeadingColor,\n  media,\n  // Width\n} from '../Utils/Constants'\nimport {\n  LargeMargin,\n  DefaultMargin,\n  DefaultMarginAndFontSizeMobile,\n  WrapperMaxWidthDesktop,\n  WrapperMaxWidthMobile,\n  WrapperMarginsMobile\n} from \"../Utils/Constants\"\nimport StyledProjects from \"./Projects\";\nimport ShowMoreButton from \"./ShowMoreButton\";\n\n/**\n * This Styled Component wraps the Project Section.\n *\n * @param className String    From styled components\n */\nclass ProjectsSection extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      projectsToShow: 3,\n      showMoreStyle: {}\n    }\n  }\n\n  handleClick = event => {\n    // console.log(this.state.projectsToShow)\n    this.setState({\n      projectsToShow: this.state.projectsToShow + 3,\n      showMoreStyle: {\n        backgroundColor: DarkLinkHoverVisited,\n        color: LightHeadingColor,\n      }\n    }, () => {\n      if (typeof window !== 'undefined') {\n        const nextProject = document.querySelector(`#styled-project-${this.state.projectsToShow - 3}`)\n        if (nextProject) {\n          nextProject.scrollIntoView({\n            behavior: 'smooth',\n          })\n        }\n        this.setState({\n          showMoreStyle: {}\n        })\n      }\n    })\n  }\n\n  render() {\n    return (\n        <StyledProjectsSection id=\"projects\">\n          <StyledProjectContainer>\n            <h2>Projects</h2>\n            <StyledLoader>\n              <StyledProjects projectsToShow={this.state.projectsToShow} />\n              <ShowMoreButton onClick={this.handleClick}\n                              style={this.state.showMoreStyle}\n                              projectCount={this.state.projectsToShow}/>\n            </StyledLoader>\n          </StyledProjectContainer>\n        </StyledProjectsSection>\n    )\n  }\n}\n\nconst StyledLoader = styled.div`\n  width: 100%;\n`\n\nconst StyledProjectContainer = styled.div`\n  max-width: ${ WrapperMaxWidthMobile }px;\n  margin: ${ DefaultMarginAndFontSizeMobile }px ${ WrapperMarginsMobile }px;\n  \n  ${media.greaterThan(\"small\")`\n    margin: ${ DefaultMarginAndFontSizeMobile }px auto;\n  `}\n  \n  ${media.greaterThan(\"medium\")`\n    max-width: ${ WrapperMaxWidthDesktop }px;\n    margin: ${ DefaultMargin }px auto; \n    \n    h2 {\n      margin-bottom: ${ LargeMargin }px;\n    }\n  `}\n`\n\nconst StyledProjectsSection = styled.section`\n  position: relative;\n  overflow: hidden;\n  width: 100%;\n`\n\nexport default ProjectsSection","import React from 'react'\nimport { graphql, StaticQuery } from 'gatsby'\nimport styled from 'styled-components'\n\nimport BackgroundImage from './Utils/BackgroundImage'\nimport StyledCopyrightSection from './Footer'\nimport StyledProjectsSection from './Projects'\nimport {\n  Width,\n  media,\n  // DarkBackground,\n  BlueBackground\n} from './Utils/Constants'\n\nconst BottomSection = ({ className }) => (\n    <StaticQuery query={graphql`\n      query {\n        desktop: file(relativePath: { eq: \"seamless-bg-desktop.jpg\" }) {\n          childImageSharp {\n            fluid(quality: 100, maxWidth: 4160) {\n              ...GatsbyImageSharpFluid_withWebp\n            }\n          }\n        }\n        mobile: file(relativePath: { eq: \"seamless-bg-mobile.jpg\" }) {\n          childImageSharp {\n            fluid(quality: 90, maxWidth: 640) {\n              ...GatsbyImageSharpFluid_withWebp\n            }\n          }\n        }\n      }\n    `}\n     render={data => {\n       // Switch Image according to size on desktop / mobile.\n       const imageData = Width > 640 ?\n           data.desktop.childImageSharp.fluid :\n           data.mobile.childImageSharp.fluid\n       return (\n          <BackgroundImage Tag=\"section\"\n                           className={className}\n                           fluid={imageData}\n                           backgroundColor={BlueBackground}\n          >\n            <StyledProjectsSection />\n            <StyledCopyrightSection />\n          </BackgroundImage>\n       )\n     }\n     }\n    />\n)\n\nconst StyledBottomSection = styled(BottomSection)`\n  width: 100%;\n  background-repeat: repeat-y;\n  \n  ${media.lessThan(\"medium\")`\n    background-size: contain !important;\n  `}\n`\n\nexport default StyledBottomSection","import React from 'react'\n\nimport Layout from './Layout'\nimport StyledWelcomeSection from './Welcome'\nimport StyledAboutSection from './About'\nimport StyledBottomSection from './StyledBottomSection'\n\nconst MainPage = () => (\n    <Layout>\n      <StyledWelcomeSection />\n      <StyledAboutSection />\n      <StyledBottomSection />\n    </Layout>\n)\n\nexport default MainPage","import React from 'react'\nimport 'typeface-rubik'\n\nimport GlobalStyle from '../components/GlobalStyle'\nimport MainPage from '../components'\n// import NotFoundContainer from '../components/NotFoundContainer'\n\n/**\n * Integrate FontAwesome Icons\n */\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { fab } from '@fortawesome/free-brands-svg-icons'\nimport { faAngleDown } from '@fortawesome/pro-solid-svg-icons'\n\nlibrary.add(fab, faAngleDown)\n\n/**\n * Main Page.\n * @return {*}\n * @constructor\n */\nconst IndexPage = () => (\n    <React.Fragment>\n      <MainPage />\n      {/*<NotFoundContainer/>*/}\n      <GlobalStyle />\n    </React.Fragment>\n)\n\nexport default IndexPage\n"],"sourceRoot":""}